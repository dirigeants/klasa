{"meta":{"generator":"0.0.1","format":19,"date":1516899198938},"custom":{"tutorials":{"name":"tutorials","files":{"Creating Events":{"name":"Creating Events","type":"md","content":"Events are placed in `./events/`. If a conflicting event is present in both the core and your client, *only your client version* is loaded and will run when that event is triggered.\n\nTheir structure is the following:\n\n```javascript\nconst { Event } = require('klasa');\n\nmodule.exports = class extends Event {\n\n\tconstructor(...args) {\n\t\tsuper(...args, { name:'yourEventName', enabled: true });\n\t}\n\n\trun(...params) {\n\t\t// This is where you place the code you want to run for your event\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n\t}\n\n};\n```\n\nWhere `...params` are arguments you would *normally* get from those events. For example, while the `ready` event would only have none, the `guildMemberAdd` event would be `member`.\n\n## Configuration\n\n| Name        | Default       | Type    | Description                         |\n| ----------- | ------------- | ------- | ----------------------------------- |\n| **name**    | `theFileName` | string  | The name of the event               |\n| **enabled** | `true`        | boolean | Whether the event is enabled or not |\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}\n","path":"tutorials/CreatingEvents.md"},"Creating Extendables":{"name":"Creating Extendables","type":"md","content":"Extendables are functions that extend current Discord.js classes by adding methods or properties.\n\nExtendables have the following syntax:\n\n```javascript\nconst { Extendable } = require('klasa');\n\nmodule.exports = class extends Extendable {\n\n\tconstructor(...args) {\n\t\tsuper(...args, ['Message'], {\n\t\t\tname: 'nameOfExtendable',\n\t\t\tenabled: true,\n\t\t\tklasa: false\n\t\t});\n\t}\n\n// Getters\n\n\tget extend() {\n\t\t// Make a getter\n\t}\n\n// Setters\n\n\tset extend() {\n\t\t// Make a setters\n\t}\n\n// Methods\n\n\textend() {\n\t\t// Make a methods\n\t}\n\n};\n```\n\n## Understanding extendable settings\n\n```js\nconstructor(...args) {\n    super(...args, appliesTo, {\n\t\tname: 'nameOfExtendable', // default the file name\n\t\tenabled: true, // default true\n\t\tklasa: false // default false\t\n\t);\n} \n```\n\n| Name                | Default       | Type    | Description                                            |\n| ------------------- | ------------- | ------- | ------------------------------------------------------ |\n| **options.name**    | `theFileName` | string  | The name of the method/property                        |\n| **options.enabled** | `true`        | boolean | If the extendable is enabled or not                    |\n| **options.klasa**   | `false`       | boolean | If the extendable is for Klasa instead of Discord.js   |\n| **appliesTo**       | `[]`          | Array   | An array of affected classes from Discord.js or Klasa. |\n\n> You can find all extendable classes for [Discord.js](https://github.com/hydrabolt/discord.js/blob/master/src/index.js) and [Klasa](https://github.com/dirigeants/klasa/blob/master/src/index.js) in those respective links.\n\n## Understanding extend\n\nThe extend method can only be a setter, getter, or method. You cannot define multiple in one file as the above example may imply.\n\n## Examples\n\nImagine we want to extend the [Message](https://discord.js.org/#/docs/main/master/class/Message) class\nso it has a method called `prompt` so you can do `Message#prompt(\"Are you sure you want to continue?\")`\neverywhere in your code, resolving if the user confirms the prompt, or rejecting otherwise. Then, your\nextendable is likely to be like the following:\n\n> You can extend the Message object with this because you're likely to lock the prompt for a user in a channel,\nand Message has both properties of `author` and `channel`.\n\n```js\nconst { Extendable } = require('klasa');\n\nmodule.exports = class extends Extendable {\n\n\tconstructor(...args) {\n\t\tsuper(...args, ['Message'], { name: 'prompt' });\n\t}\n\n\textend() {\n\t\treturn prompt();\n\t}\n\n};\n```\n\nWhere `prompt()` is your prompt function.\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}","path":"tutorials/CreatingExtendables.md"},"Creating Monitors":{"name":"Creating Monitors","type":"md","content":"Monitors are special in that they will always run on any message. This is particularly\nuseful when you need to do checking on the message, such as checking if a message\ncontains a vulgar word (profanity filter). They are almost completely identical to\ninhibitors, the only difference between one is ran on the message, and the other\nis ran on the command. Monitors are loaded as core first, and if your code contains\na monitor of the same name it overrides the core monitor.\n\nTheir structure is identical to inhibitors, being the only difference is that you\ndon't pass a command parameter to them.\n\n```javascript\nconst { Monitor } = require('klasa');\n\nmodule.exports = class extends Monitor {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'yourMonitorName',\n\t\t\tenabled: true,\n\t\t\tignoreBots: true,\n\t\t\tignoreSelf: true,\n\t\t\tignoreOthers: true\n\t\t});\n\t}\n\n\trun(msg) {\n\t\t// This is where you place the code you want to run for your monitor\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n\t}\n\n};\n```\n\n## Configuration\n\n| Name             | Default       | Type    | Description                               |\n| ---------------- | ------------- | ------- | ----------------------------------------- |\n| **name**         | `theFileName` | string  | The name of the monitor                   |\n| **enabled**      | `true`        | boolean | Whether the monitor is enabled or not     |\n| **ignoreBots**   | `true`        | boolean | Whether the monitor ignores bots or not   |\n| **ignoreSelf**   | `true`        | boolean | Whether the monitor ignores itself or not |\n| **ignoreOthers** | `true`        | boolean | Whether the monitor ignores others or not |\n\n>As with all other pieces, you can omit any optional Configuration that match the default values.\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingProviders}","path":"tutorials/CreatingMonitors.md"},"Creating Commands":{"name":"Creating Commands","type":"md","content":"New commands are created in the `./commands/` folder, where subfolders are the categories offered in the help command. For instance adding `./commands/Misc/test.js` will create a command named `test` in the `Misc` category. Subcategories can also be created by adding a second folder level.\n\n```javascript\nconst { Command } = require('klasa');\n\nmodule.exports = class extends Command {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'yourCommandName',\n            enabled: true,\n            runIn: ['text', 'dm', 'group'],\n            cooldown: 0,\n            aliases: [],\n            permLevel: 0,\n            botPerms: [],\n            requiredSettings: [],\n            description: '',\n            quotedStringSupport: false,\n            usage: '',\n            usageDelim: undefined,\n            extendedHelp: 'No extended help available.'\n\t\t});\n\t}\n\n\tasync run(msg, [...params]) {\n\t\t// This is where you place the code you want to run for your command\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n\t}\n\n};\n```\n\n## Configuration\n\n| Name                    | Default                             | Type    | Description                                                                 |\n| ----------------------- | ----------------------------------- | ------- | --------------------------------------------------------------------------- |\n| **name**                | `theFileName`                       | string  | The name of the command                                                     |\n| **enabled**             | `true`                              | boolean | Whether the command is enabled or not                                       |\n| **runIn**               | `['text', 'dm', 'group']`           | Array   | What channel types the command should run in                                |\n| **cooldown**            | `0`                                 | number  | The amount of time before the user can run the command again in seconds     |\n| **aliases**             | `[]`                                | Array   | Any comand aliases                                                          |\n| **permLevel**           | `0`                                 | number  | The required permission level to use the command                            |\n| **botPerms**            | `[]`                                | Array   | The required Discord permissions for the bot to use this command            |\n| **requiredSettings**    | `[]`                                | Array   | The required guild settings to use this command                             |\n| **description**         | `''`                                | string  | The help description for the command                                        |\n| **usage**               | `''`                                | string  | The usage string for the command See. {@tutorial UnderstandingUsageStrings} |\n| **usageDelim**          | `''`                                | string  | The string to deliminate the command input for usage                        |\n| **quotedStringSupport** | `client.config.quotedStringSupport` | boolean | Wheter args for this command should not deliminated inside quotes           |\n| **extendedHelp**        | `'No extended help available.'`     | string  | Extended help strings                                                       |\n\n> All commands are required to return an [Object Promise](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise) you can do that by adding the `async` keyword to the function, there's no need to change anything else.\n\n> All [command options]{@link CommandOptions} are optional, the code above shows all default values. You can delete any line with an optional value that matches the default value.\n\n>`[...params]` represents a variable number of arguments give when the command is run. The name of the arguments in the array (and their count) is determined by the `usage` property and its given arguments.\n\n## Further Reading:\n\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}\n","path":"tutorials/CreatingCommands.md"},"Creating Providers":{"name":"Creating Providers","type":"md","content":"Data Providers are special classes designed to make your life easier when you're\nusing a **database**, there's **no** rule to make them. By default, Klasa uses\nJSON to store per-guild configuration.\n\nWhen you create a data provider, you can access to them by: `client.providers.get(ProviderName)`.\n\n```javascript\nconst { Provider } = require('klasa');\nconst { resolve } = require('path');\nconst fs = require('fs-nextra');\n\nmodule.exports = class extends Provider {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'json',\n\t\t\tdescription: 'Allows you to use JSON functionality throught Klasa'\n\t\t});\n\t\tthis.baseDir = resolve(this.client.clientBaseDir, 'bwd', 'provider', 'json');\n\t}\n\n\tinit() {\n\t\treturn fs.ensureDir(this.baseDir).catch(err => this.client.emit('error', err));\n\t}\n\n\t/* Table methods */\n\n\t/**\n\t * Checks if a directory exists.\n\t * @param {string} table The name of the table you want to check.\n\t * @returns {Promise<boolean>}\n\t */\n\thasTable(table) {\n\t\treturn fs.pathExists(resolve(this.baseDir, table));\n\t}\n\n\t/**\n\t * Creates a new directory.\n\t * @param {string} table The name for the new directory.\n\t * @returns {Promise<Void>}\n\t */\n\tcreateTable(table) {\n\t\treturn fs.mkdir(resolve(this.baseDir, table));\n\t}\n\n\t/**\n\t * Recursively deletes a directory.\n\t * @param {string} table The directory's name to delete.\n\t * @returns {Promise<Void>}\n\t */\n\tdeleteTable(table) {\n\t\treturn this.hasTable(table)\n\t\t\t.then(exists => exists ? fs.emptyDir(resolve(this.baseDir, table)).then(() => fs.remove(resolve(this.baseDir, table))) : null);\n\t}\n\n\t/* Document methods */\n\n\t/**\n\t * Get all documents from a directory.\n\t * @param {string} table The name of the directory to fetch from.\n\t * @returns {Promise<Object[]>}\n\t */\n\tgetAll(table) {\n\t\tconst dir = resolve(this.baseDir, table);\n\t\treturn fs.readdir(dir)\n\t\t\t.then(files => Promise.all(files.map(file => fs.readJSON(resolve(dir, file)))));\n\t}\n\n\t/**\n\t * Get a document from a directory.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @returns {Promise<?Object>}\n\t */\n\tget(table, document) {\n\t\treturn fs.readJSON(resolve(this.baseDir, table, `${document}.json`)).catch(() => null);\n\t}\n\n\t/**\n\t * Check if the document exists.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @returns {Promise<boolean>}\n\t */\n\thas(table, document) {\n\t\treturn fs.pathExists(resolve(this.baseDir, table, `${document}.json`));\n\t}\n\n\t/**\n\t * Get a random document from a directory.\n\t * @param {string} table The name of the directory.\n\t * @returns {Promise<Object>}\n\t */\n\tgetRandom(table) {\n\t\treturn this.getAll(table).then(data => data[Math.floor(Math.random() * data.length)]);\n\t}\n\n\t/**\n\t * Insert a new document into a directory.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @param {Object} data The object with all properties you want to insert into the document.\n\t * @returns {Promise<Void>}\n\t */\n\tcreate(table, document, data) {\n\t\treturn fs.outputJSONAtomic(resolve(this.baseDir, table, `${document}.json`), Object.assign(data, { id: document }));\n\t}\n\n\tset(...args) {\n\t\treturn this.create(...args);\n\t}\n\n\tinsert(...args) {\n\t\treturn this.create(...args);\n\t}\n\n\t/**\n\t * Update a document from a directory.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @param {Object} data The object with all the properties you want to update.\n\t * @returns {Promise<Void>}\n\t */\n\tupdate(table, document, data) {\n\t\treturn this.get(table, document)\n\t\t\t.then(current => fs.outputJSONAtomic(resolve(this.baseDir, table, `${document}.json`), Object.assign(current, data)));\n\t}\n\n\t/**\n\t * Replace all the data from a document.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @param {Object} data The new data for the document.\n\t * @returns {Promise<Void>}\n\t */\n\treplace(table, document, data) {\n\t\treturn fs.outputJSONAtomic(resolve(this.baseDir, table, `${document}.json`), data);\n\t}\n\n\t/**\n\t * Delete a document from the table.\n\t * @param {string} table The name of the directory.\n\t * @param {string} document The document name.\n\t * @returns {Promise<Void>}\n\t */\n\tdelete(table, document) {\n\t\treturn fs.unlink(resolve(this.baseDir, table, `${document}.json`));\n\t}\n\n};\n\n```\n\nThe example above is the JSON provider used in klasa, and interfacing with the settingGateway.\n\n## Configuration\n\n| Name            | Default       | Type    | Description                                  |\n| --------------- | ------------- | ------- | -------------------------------------------- |\n| **name**        | `theFileName` | string  | The name of the provider                     |\n| **enabled**     | `true`        | boolean | Whether the provider is enabled or not       |\n| **description** | `''`          | string  | The provider description                     |\n| **sql**         | `false`       | boolean | if the provider provides to a sql datasource |\n\n## Accessing Providers\n\nProviders are stored in the main `client` object, in the `providers` property. This has an entry\nfor each provider added, based on its `name`. So for example if you have it set as\n`sqlite` , you can access it through `client.providers.get(\"sqlite\");`.\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n","path":"tutorials/CreatingProviders.md"},"Creating Inhibitors":{"name":"Creating Inhibitors","type":"md","content":"Inhibitors are only ran on commands. They are used to check a variety of conditions\nbefore a command is ever ran, such as checking if a user has the right amount of permissions\nto use a command. Inhibitors are loaded as core first, and if your code contains a inhibitor\nof the same name it overrides the core inhibitor.\n\nTheir structure is restricted, meaning to work they must be defined exactly like\nthe following example. They *must* return an [Object Promise](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise).\nYou can accomplish this by adding the `async` identifier, or returning a new promise.\nAn inhibitor blocks a command by rejecting the promise, either with a string or `undefined` for silent rejections.\n\n```javascript\nconst { Inhibitor } = require('klasa');\n\nmodule.exports = class extends Inhibitor {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'myInhibitorName',\n            enabled: true,\n            spamProtection: false\n        });\n\t}\n\n\tasync run(msg, cmd) {\n\t\t// This is where you place the code you want to run for your inhibitor\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n\t}\n\n};\n\n```\n\n## Configuration\n\n| Name               | Default       | Type    | Description                                                                                  |\n| ------------------ | ------------- | ------- | -------------------------------------------------------------------------------------------- |\n| **name**           | `theFileName` | string  | The name of the inhibitor                                                                    |\n| **enabled**        | `true`        | boolean | Whether the inhibitor is enabled or not                                                      |\n| **spamProtection** | `false`       | boolean | If this inhibitor is meant for spamProtection (disables the inhibitor while generating help) |\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}","path":"tutorials/CreatingInhibitors.md"},"Included Commands":{"name":"Included Commands","type":"md","content":"## System / conf\n\nAllows authorized members to set per guild settings.\n\n**Source:**\n\n[commands/System/conf.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/conf.js)\n\n## System / disable\n\nTemperarly global disable any piece except for extendables. (reverts to the in file settings upon reboot.)\n\n**Source:**\n\n[commands/System/disable.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/disable.js)\n\n## System / download\n\n**Disabled for now:** This command isn't ready for feature pairty with komada.\n\n**Source:**\n\n[commands/System/download.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/download.js)\n\n## System / enable\n\nTemperarly global enable any piece except for extendables. (reverts to the in file settings upon reboot.)\n\n**Source:**\n\n[commands/System/enable.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/enable.js)\n\n## System / eval\n\nEvaluates abritrary javascript. Useful for debugging.\n\n**Source:**\n\n[commands/System/eval.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/eval.js)\n\n## System / help\n\nThe default help command, compiles the help details for all commands and sends them to the user's dm, or the channel if a selfbot.\n\n**Source:**\n\n[commands/System/help.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/help.js)\n\n## System / info\n\nStandard info about klasa. Feel free to personalize, or privide bot statistics.\n\n**Source:**\n\n[commands/System/info.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/info.js)\n\n## System / invite\n\nProvides an up to date invite link, taking into consideration all of the bot permissions all of your commands take to function.\n\n**Source:**\n\n[commands/System/invite.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/invite.js)\n\n## System / ping\n\nSimple ping pong, measure the time between the two command.\n\n**Source:**\n\n[commands/System/ping.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/ping.js)\n\n## System / reboot\n\nReboots the bot, requires something like Forever or PM2 to actually restart the bot application.\n\n**Source:**\n\n[commands/System/reboot.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/reboot.js)\n\n## System / reload\n\nReloads any piece, or all pieces of a specific category.\n\n**Source:**\n\n[commands/System/reload.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/reload.js)\n\n## System / stats\n\nInfo about the resources this bot is using\n\n**Source:**\n\n[commands/System/stats.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/stats.js)\n\n## System / Transfer\n\nTransfers a core piece to your user directories, so you can edit them to your preferences.\n\n**Source:**\n\n[commands/System/Transfer.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/Transfer.js)\n\n## System / unload\n\nUnloads any piece except extendables.\n\n**Source:**\n\n[commands/System/unload.js](https://github.com/dirigeants/klasa/blob/master/src/commands/System/unload.js)\n\n## Further Reading:\n\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}","path":"tutorials/IncludedCommands.md"},"Included Finalizers":{"name":"Included Finalizers","type":"md","content":"## commandCooldown\n\nPuts users on cooldown for the specific used command globaly, based on the cooldown configuration of the command.\n\n**Source:**\n\n[finalizers/commandCooldown.js](https://github.com/dirigeants/klasa/blob/master/src/finalizers/commandCooldown.js)\n\n## commandLogging\n\nEmits log to log command use in the console.\n\n**Source:**\n\n[finalizers/commandLogging.js](https://github.com/dirigeants/klasa/blob/master/src/finalizers/commandLogging.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}","path":"tutorials/IncludedFinalizers.md"},"Included Extendables":{"name":"Included Extendables","type":"md","content":"## get attachable\n\nA getter to check and see if you can attach files in the channel.\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/attachable.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/attachable.js)\n\n## get embedable\n\nA getter to check and see if you can embed links in the channel.\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/embedable.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/embedable.js)\n\n## get guildSettings\n\nA getter to check get either the guild settings if in a guild, or the default bot settings in dm/group dm.\n\n**Applies to:**\n\n- {@link external:Message}\n\n**Source:**\n\n[extendables/guildSettings.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/guildSettings.js)\n\n## get postable\n\nA getter to check and see if you can send messages in the channel.\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/postable.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/postable.js)\n\n## get language\n\nA getter to get the configured language.\n\n**Applies to:**\n\n- {@link external:Guild}\n- {@link external:Message}\n\n**Source:**\n\n[extendables/language.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/language.js)\n\n## get reactable\n\nA getter to check and see if you can react in the channel.\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/reactable.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/reactable.js)\n\n## get readable\n\nA getter to check and see if you can read in the channel.\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/readable.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/readable.js)\n\n## get settings\n\nA getter to get the settings in a guild.\n\n**Applies to:**\n\n- {@link external:Guild}\n\n**Source:**\n\n[extendables/settings.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/settings.js)\n\n## get usableCommands\n\nA getter to return a collection of usable commands by the message author/member.\n\n**Applies to:**\n\n- {@link external:Message}\n\n**Source:**\n\n[extendables/usableCommands.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/usableCommands.js)\n\n## hasAtLeastPermissionLevel(permission:number)\n\nChecks to see if the author/member has atleast the Permission level passed.\n\n**Applies to:**\n\n- {@link external:Message}\n\n**Source:**\n\n[extendables/hasAtLeastPermissionLevel.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/hasAtLeastPermissionLevel.js)\n\n## send(content:string, options:Object)\n\nA shortcut to channel.send, but also makes the response an editable command.\n\n**Applies to:**\n\n- {@link external:Message}\n\n**Source:**\n\n[extendables/send.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/send.js)\n\n## sendCode\n\nA shortcut to channel.send, but also makes the response an editable command.\n\n**Applies to:**\n\n- {@link external:Message}\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/sendCode.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/sendCode.js)\n\n## sendEmbed\n\nA shortcut to channel.send, but also makes the response an editable command.\n\n**Applies to:**\n\n- {@link external:Message}\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/sendEmbed.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/sendEmbed.js)\n\n## sendFile\n\nA alias to channel.send({files:{file:....\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/sendFile.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/sendFile.js)\n\n## sendFiles\n\nA alias to channel.send({files:...\n\n**Applies to:**\n\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/sendFiles.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/sendFiles.js)\n\n## sendMessage\n\nA shortcut to channel.send, but also makes the response an editable command.\n\n**Applies to:**\n\n- {@link external:Message}\n- {@link external:GroupDMChannel}\n- {@link external:DMChannel}\n- {@link external:TextChannel}\n\n**Source:**\n\n[extendables/sendMessage.js](https://github.com/dirigeants/klasa/blob/master/src/extendables/sendMessage.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}\n","path":"tutorials/IncludedExtendables.md"},"Included Inhibitors":{"name":"Included Inhibitors","type":"md","content":"## cooldown\n\nChecks if a user is on cooldown for the command run.\n\n**Source:**\n\n[inhibitors/cooldown.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/cooldown.js)\n\n## disable\n\nChecks if the command is globally or locally disabled.\n\n**Source:**\n\n[inhibitors/disable.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/disable.js)\n\n## missingBotPermissions\n\nChecks to make sure the bot has all permissions needed (based on {@link Command#botPerms}) in the channel to run the command.\n\n**Source:**\n\n[inhibitors/missingBotPermissions.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/missingBotPermissions.js)\n\n## permissions\n\nChecks if the author/member has permission to use the command. (based on {@link Command#permLevel})\n\n**Source:**\n\n[inhibitors/permissions.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/permissions.js)\n\n## requiredSettings\n\nChecks if the guild has the required settings defined. (based on {@link Command#requiredSettings})\n\n**Source:**\n\n[inhibitors/requiredSettings.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/requiredSettings.js)\n\n## runIn\n\nChecks if the command can be run in the channel type this is. (based on {@link Command#runIn})\n\n**Source:**\n\n[inhibitors/runIn.js](https://github.com/dirigeants/klasa/blob/master/src/inhibitors/runIn.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}","path":"tutorials/IncludedInhibitors.md"},"Included Languages":{"name":"Included Languages","type":"md","content":"## de-DE\n\nGerman(Deutsch)/Denmark\n\n**Source:**\n\n[languages/de-DE.js](https://github.com/dirigeants/klasa/blob/master/src/languages/de-DE.js)\n\n## en-US\n\nEnglish/United States\n\n**Source:**\n\n[languages/en-US.js](https://github.com/dirigeants/klasa/blob/master/src/languages/en-US.js)\n\n## es-ES\n\nSpanish(Espanol)/Spain\n\n**Source:**\n\n[languages/es-ES.js](https://github.com/dirigeants/klasa/blob/master/src/languages/es-ES.js)\n\n## fr-FR\n\nFrench/France\n\n**Source:**\n\n[languages/fr-FR.js](https://github.com/dirigeants/klasa/blob/master/src/languages/fr-FR.js)\n\n## ro-RO\n\nRomainian/Romania\n\n**Source:**\n\n[languages/ro-RO.js](https://github.com/dirigeants/klasa/blob/master/src/languages/ro-RO.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}","path":"tutorials/IncludedLanguages.md"},"Included Events":{"name":"Included Events","type":"md","content":"## commandError\n\nHandles command errors.\n\n**Source:**\n\n[events/commandError.js](https://github.com/dirigeants/klasa/blob/master/src/events/commandError.js)\n\n## commandInhibited\n\nReplies the reason why the command was inhibited.\n\n**Source:**\n\n[events/commandInhibited.js](https://github.com/dirigeants/klasa/blob/master/src/events/commandInhibited.js)\n\n## debug\n\nRe-emits the Discord.js debug event as log event, if enabled. (disabled by default)\n\n**Source:**\n\n[events/debug.js](https://github.com/dirigeants/klasa/blob/master/src/events/debug.js)\n\n## disconnect\n\nRe-emits the disconnect error code and reason as log event.\n\n**Source:**\n\n[events/disconnect.js](https://github.com/dirigeants/klasa/blob/master/src/events/disconnect.js)\n\n## error\n\nRe-emits the Discord.js debug event as log event, if enabled.\n\n**Source:**\n\n[events/error.js](https://github.com/dirigeants/klasa/blob/master/src/events/error.js)\n\n## guildCreate\n\nCreates necessary SettingGateway entries for the new guild.\n\n**Source:**\n\n[events/guildCreate.js](https://github.com/dirigeants/klasa/blob/master/src/events/guildCreate.js)\n\n## guildDelete\n\nRemoves SettingGateway entries for the guild.\n\n**Source:**\n\n[events/guildDelete.js](https://github.com/dirigeants/klasa/blob/master/src/events/guildDelete.js)\n\n## log\n\nLogs event details to your console, with timestamps and color coding.\n\n**Source:**\n\n[events/log.js](https://github.com/dirigeants/klasa/blob/master/src/events/log.js)\n\n## message\n\nRuns monitors.\n\n**Source:**\n\n[events/message.js](https://github.com/dirigeants/klasa/blob/master/src/events/message.js)\n\n## messageDeleteBulk\n\nRe-emits each message as a messageDelete, so that any deleted messages which are also cached CommandMessages, will be uncached.\n\n**Source:**\n\n[events/messageDeleteBulk.js](https://github.com/dirigeants/klasa/blob/master/src/events/messageDeleteBulk.js)\n\n## messageUpdate\n\nRe-emits if command editing is enabled, and if the content is not the same, to check and see if the new message is a edited command.\n\n**Source:**\n\n[events/messageUpdate.js](https://github.com/dirigeants/klasa/blob/master/src/events/messageUpdate.js)\n\n## warn\n\nRe-emits the Discord.js debug event as log event, if enabled.\n\n**Source:**\n\n[events/warn.js](https://github.com/dirigeants/klasa/blob/master/src/events/warn.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n- {@tutorial IncludedProviders}\n","path":"tutorials/IncludedEvents.md"},"Included Pieces":{"name":"Included Pieces","type":"md","content":"Klasa includes a number of pieces (Commands, Events, Finalizers, Inhibitors, languages, Monitors, Providers) to give any bot a good platform to build on. Any piece can be transfered into your user files and modified without limitation. (If a piece of the same name exists in your user files, it will override the core version of it.) Although some pieces should be modified carefully. For instance, if you transfer the message event, and remove the line telling it to run the monitors, no monitor pieces will run on your bot. At the same time, that precisely gives you full control over the bot that __you__ want to run.","path":"tutorials/IncludedPieces.md"},"Included Monitors":{"name":"Included Monitors","type":"md","content":"## commandHandler\n\nThe command handler for Klasa.\n\n**Source:**\n\n[monitors/commandHandler.js](https://github.com/dirigeants/klasa/blob/master/src/monitors/commandHandler.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedProviders}","path":"tutorials/IncludedMonitors.md"},"Getting Started":{"name":"Getting Started","type":"md","content":"## Installing Klasa\n\nTime to take the plunge! Klasa is on NPM and can be easily installed.\n\n> I assume you know how to open a command prompt in a folder where you want to install this. Please don't prove me wrong.\n\n```sh\nnpm install --save klasa\n```\n\noptionally if you want to use the bleeding edge development version (not guaranteed to be stable):\n\n```sh\nnpm install --save dirigeants/klasa\n```\n\n### Using Klasa\n\nCreate a file called `app.js` (or whatever you prefer) which will initiate and configure Klasa.\n\n```javascript\nconst { Client } = require('klasa');\n\nnew Client({\n    clientOptions: {\n        fetchAllMembers: false\n    },\n    prefix: '+',\n    cmdEditing: true,\n    typing: true,\n    readyMessage: (client) => `${client.user.tag}, Ready to serve ${client.guilds.size} guilds and ${client.users.size} users`\n}).login('your-bot-token');\n```\n\n### Configuration Options: [KlasaClientConfig]{@link KlasaClient.KlasaClientConfig}\n\n| Name                       | Default                   | Type               | Description                                                                         |\n| -------------------------- | ------------------------- | ------------------ | ----------------------------------------------------------------------------------- |\n| **clientOptions**          | `{}`                      | Object             | These are passed directly to the discord.js library. They are optional.¹            |\n| **prefix**                 | `undefined`               | string/regex/array | The default prefix(es) when the bot first boots up.²                                |\n| **permissionLevels**       | `defaultPermissionLevels` | PermissionLevels   | The permission levels to use with this bot                                          |\n| **clientBaseDir**          | see below³                | string             | The directory where all piece folders can be found                                  |\n| **commandMessageLifetime** | `1800`                    | number             | The threshold for when comand messages should be sweeped in seconds since last edit |\n| **commandMessageSweep**    | `900`                     | number             | The interval duration for which command messages should be sweept in seconds        |\n| **provider**               | `json`                    | string             | The provider to use in Klasa                                                        |\n| **language**               | `en-US`                   | string             | The default language Klasa should opt-in for the commands                           |\n| **promptTime**             | `30000`                   | number             | The amount of time in milliseconds prompts should last                              |\n| **ignoreBots**             | `true`                    | boolean            | Whether or not this bot should ignore other bots                                    |\n| **ignoreSelf**             | `client.user.bot`         | boolean            | Whether or not this bot should ignore itself (true for bots, false for selfbots)    |\n| **cmdPrompt**              | `false`                   | boolean            | Whether the bot should prompt missing parameters                                    |\n| **cmdEditing**             | `false`                   | boolean            | Whether the bot should update responses if the command is edited                    |\n| **cmdLogging**             | `false`                   | boolean            | Whether the bot should log command usage                                            |\n| **quotedStringSupport**    | `false`                   | boolean            | Whether the bot should default to using quoted string support⁴                      |\n| **typing**                 | `false`                   | boolean            | Whether the bot should type while processing commands.                              |\n| **readyMessage**           | see below⁵                | string/function    | readyMessage to be passed through to Klasa's ready event.                           |\n| **ownerID**                | see below⁶                | string             | The discord id for the user the bot should respect as the owner                     |\n\n>1: For more information on which D.JS options are available, see [ClientOptions in the discord.js docs](https://discord.js.org/#/docs/main/master/typedef/ClientOptions).  \n>2: This option becomes useless after first boot, since the prefix is written to the default configuration system. Pass an array to accept multiple prefixes.  \n>3: The directory of the main file. `path.dirname(require.main.filename)`  \n>4: quotedStringSupport is overridable per command  \n>5: `Successfully initialized. Ready to serve ${client.guilds.size} guilds.`  \n>6: ID gotten from teh Discord api if not provided: `client.application.owner.id`  \n\n## Running the bot\n\nThen, run the following in your folder:\n\n```sh\nnpm install\nnode app.js\n```\n\n> **Requirements**: Requires Node 8.5.0 or higher to run. Depends on Discord.js v12.0.0-dev or higher (this is peer depended on, so you can choose a non-broken commit).\n\n## What's next?\n\nKlasa will create folders in your directory to make your own custom pieces in. Klasa will automatically check these folders on bootup, or if you reload all of a type of piece. `+reload commands` ect assuming your prefix is `+` like the example app.js file above.\n","path":"tutorials/GettingStarted.md"},"Rich Display":{"name":"Rich Display","type":"md","content":"{@link RichDisplay} allows you to create a paginated embed that users of your bot will be able to browse by using reaction-based navigation.\n\nAn extremely simple working example can achieved by this code:\n\n```javascript\nconst { Command, RichDisplay } = require('klasa');\n\nmodule.exports = class extends Command {\n\n\tconstructor(...args) {\n\t\tsuper(...args, { description: 'Test RichDisplay' });\n\t}\n\n\tasync run(msg) {\n\t\treturn new RichDisplay()\n\t\t\t.addPage(new Embed().setDescription('First page'))\n\t\t\t.addPage(new Embed().setDescription('Second page'))\n\t\t\t.run(await msg.send('Loading...'));\n\t}\n\n};\n```\n\nA more complex example with an actual usage is this:\n\n```javascript\nconst display = new RichDisplay(new this.client.methods.Embed()\n\t.setColor(0x673AB7)\n\t.setAuthor(this.client.user.name, this.client.user.avatarURL())\n\t.setTitle('Random Image Slideshow')\n\t.setDescription('Scroll between the images using the provided reaction emotes.')\n);\n\nfor (let i = 0; i < 10; i++) {\n\tdisplay.addPage(template => template.setImage('https://lorempixel.com/400/200/'));\n}\n\nreturn display.run(await msg.send('Loading slideshow...'));\n```\n\n> The code is contained in the block of the aforementioned command, inside the `async run(msg)` method but the display or its pages can easily be reused by placing its initialization in the command's constructor method.\n\n## Code Analysis\n\nFirst we create a new {@link RichDisplay} instance, but this time we pass in a [`MessageEmbed`](https://discord.js.org/#/docs/main/master/class/MessageEmbed) instance, which will represent our template, from which we will be able to extend upon to create our pages later on:\n\n```javascript\nconst display = new RichDisplay(new this.client.methods.Embed()\n\t/* ... */\n);\n```\n\nThis [`MessageEmbed`](https://discord.js.org/#/docs/main/master/class/MessageEmbed) instance will be accessible to us by either calling the {@link RichDisplay.template} property of the {@link RichDisplay} instance, in a cloned manner, or directly through the {@link RichDisplay.addPage} method, if we pass in an arrow function or a callback.\n\n```javascript\nfor (/* ... */) {\n\tdisplay.addPage(template => /* ... */);\n}\n```\n\nFrom here we will be able to add content or edit properties of the template, and then, return the final embed to the {@link RichDisplay.addPage} method to be processed into a {@link RichDisplay} page.\n\n```javascript\n/* ... */\n\tdisplay.addPage(template => {\n\t\ttemplate.setImage('https://lorempixel.com/400/200/')\n\t\t\t.setColor(0xF44336); // You can change everything of the template\n\t});\n```\n\nThen, after the {@link RichDisplay} is setup, we return, executing it on a new message.\n\n```javascript\nreturn display.run(await msg.send('Loading slideshow...'));\n```\n\n## Info Page\n\nWe can also define an Info page, which will be available through the appropriate reaction emote.\nAll we have to do is simply call the {@link RichDisplay.setInfoPage} instead than {@link RichDisplay.addPage}. The template will be available to us in the same ways as before.\n\n> Note: only one info page can be set at once. Setting the info page more than once will override the previously defined info page.\n\n## Personalization\n\nBehavior managing can be handled through the second (optional) argument of the {@link RichDisplay.run} method.\nThe configuration must be defined as an [object literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer).\nPlease refer to the {@link RichDisplay.RichDisplayRunOptions} documentation page for information about each specific option.\n\n### Custom Behavior Handling\n\nTo handle whether or not a user should trigger an action when interacting with the reactions applied to the embed you can provide a `filter` function, which will be called every time a user reacts to the embed.\n\nA simple example for this would be a filter that only allows the user who executes the command to interact with it:\n\n```javascript\ndisplay.run(await msg.send('Loading slideshow...'), { filter: (reaction, user) => user === msg.author });\n```\n","path":"tutorials/RichDisplay.md"},"Piece Stores":{"name":"Piece Stores","type":"md","content":"Probably one of the most advanced and powerful tools in klasa is making your own stores and pieces, to do the things you want.\n\nThe most basic store:\n\n```javascript\nconst { join } = require('path');\nconst { Collection } = require('discord.js');\nconst { Store } = require('klasa');\nconst Something = require('./Something');\n\nclass SomethingStore extends Collection {\n\n\tconstructor(client) {\n\t\tsuper();\n\t\tObject.defineProperty(this, 'client', { value: client });\n\t\tthis.userDir = join(this.client.clientBaseDir, 'somethings');\n\t\tthis.holds = Something;\n\t\tthis.name = 'somethings';\n\t}\n\n\tdelete(name) {\n\t\tconst piece = this.resolve(name);\n\t\tif (!piece) return false;\n\t\tsuper.delete(piece.name);\n\t\treturn true;\n\t}\n\n\tset(piece) {\n\t\tif (!(piece instanceof this.holds)) return this.client.emit('error', `Only ${this.name} may be stored in the Store.`);\n\t\tconst existing = this.get(piece.name);\n\t\tif (existing) this.delete(existing);\n\t\tsuper.set(piece.name, piece);\n\t\treturn piece;\n\t}\n\n\t// Technically left for more than just documentation\n\t/* eslint-disable no-empty-function */\n\tinit() {}\n\tload() {}\n\tasync loadAll() {}\n\tresolve() {}\n\t/* eslint-enable no-empty-function */\n\n}\n\nStore.applyToClass(SomethingStore);\n\nmodule.exports = SomethingStore;\n```\n\nThe most basic Piece:\n\n```javascript\nconst { Piece } = require('klasa');\n\nclass Something {\n\n\tconstructor(client, dir, file, options = {}) {\n\t\tthis.client = client;\n\t\tthis.dir = dir;\n\t\tthis.file = file;\n\t\tthis.name = options.name || file.slice(0, -3);\n\t\tthis.type = 'something';\n\t\tthis.enabled = 'enabled' in options ? options.enabled : true;\n\t}\n\n\trun() {\n\t\t// Defined in extension Classes\n\t}\n\n\tasync init() {\n\t\t// Optionally defined in extension Classes\n\t}\n\n\t// Technically left for more than just documentation\n\t/* eslint-disable no-empty-function */\n\tasync reload() {}\n\tunload() {}\n\tdisable() {}\n\tenable() {}\n\t/* eslint-enable no-empty-function */\n\n}\n\nPiece.applyToClass(Something);\n\nmodule.exports = Something;\n```\n\nNow that probably doesn't give you much idea on what that means or why. But take the following idea: You are making a music bot *gasps* and you want to give it an auto-play feature. Problem is, not everyone likes the same kind of music, so lets make a GenreStore and a Genre piece for guild owners to set the genre of music they might want to listen to automatically.\n\n```javascript\nconst { join } = require('path');\nconst { Collection } = require('discord.js');\nconst { Store } = require('klasa');\nconst Genre = require('./Genre');\n\nclass GenreStore extends Collection {\n\n\tconstructor(client) {\n\t\tsuper();\n\t\tObject.defineProperty(this, 'client', { value: client });\n\t\tthis.userDir = join(this.client.clientBaseDir, 'genres');\n\t\tthis.holds = Genre;\n\t\tthis.name = 'genres';\n\t}\n\n\t// We can wrap the delete method with additional teardown actions\n\tdelete(name) {\n\t\tconst piece = this.resolve(name);\n\t\tif (!piece) return false;\n\t\tsuper.delete(piece.name);\n\t\treturn true;\n\t}\n\n\t// We can wrap the set method with additional setup actions\n\tset(piece) {\n\t\tif (!(piece instanceof this.holds)) return this.client.emit('error', `Only ${this.name} may be stored in the Store.`);\n\t\tconst existing = this.get(piece.name);\n\t\tif (existing) this.delete(existing);\n\t\tsuper.set(piece.name, piece);\n\t\treturn piece;\n\t}\n\n\t// Technically left for more than just documentation\n\t/* eslint-disable no-empty-function */\n\tinit() {}\n\tload() {}\n\tasync loadAll() {}\n\tresolve() {}\n\t/* eslint-enable no-empty-function */\n\n}\n\nStore.applyToClass(GenreStore);\n\nmodule.exports = GenreStore;\n```\n\nTbh, not that different than a simple store. Although be sure to take a look at all of the core stores. Sometimes, like in the case of Providers, we want to run a shutdown method before we delete the collection entry. In that case we also want to overwrite the clear method, and loop over the collection doing this.delete() so that all entries are shutdown properly.\n\n```javascript\nconst { Piece, util } = require('klasa');\nconst getInfoAsync = require(\"util\").promisify(require(\"ytdl-core\").getInfo);\n\nclass Genre {\n\n\tconstructor(client, dir, file, options = {}) {\n\t\tthis.client = client;\n\t\tthis.dir = dir;\n\t\tthis.file = file;\n\t\tthis.name = options.name || file.slice(0, -3);\n\t\tthis.type = 'genre';\n\t\tthis.enabled = 'enabled' in options ? options.enabled : true;\n\t\t// we should probably describe our auto play genres in the command we will make for guild owners to set their guild's genre setting\n\t\tthis.description = options.description || '';\n\t\t// Some example artists to include with the descriptions\n\t\tthis.examples = options.examples || [];\n\t}\n\n\t// We don't even need run for this, let's call it getNext\n\tasync getNext(player) {\n\t\t// Let's define a default behavior here\n\t\t// If we aren't playing anything yet, get a link from this.seeds (which is defined in each extension piece)\n\t\tif (!player.playingURL) return this.wrapLink(this.seeds[Math.floor(Math.random() * this.seeds.length)]);\n\t\t// If we do have a link, lets get youtube info about that link\n\t\tconst info = await getInfoAsync(player.playingURL).catch((err) => {\n        \tthis.client.emit(\"log\", err, \"error\");\n        \tthrow `something happened with YouTube URL: ${url}\\n${util.codeBlock('', err)}`;\n    \t});\n\t\t// Find the first video that we haven't recenly played on our player\n\t\tconst next = info.related_videos.find(vid => vid.id && !player.recentlyPlayed.includes(this.wrapLink(vid.id)));\n\t\t// If their isn't a video, reseed a video we havn't played recently\n\t\tif (!nextID) {\n\t\t\tconst seed = this.seeds.find(vid => !player.recentlyPlayed.includes(this.wrapLink(vid)));\n\t\t\t// if we have played all of the seeds, start over on reseeding\n\t\t\tif (!seed) {\n\t\t\t\tplayer.recentlyPlayed = [];\n\t\t\t\treturn this.wrapLink(this.seeds[Math.floor(Math.random()*this.seeds.length)]);\n\t\t\t}\n\t\t\t// Else return the seed we haven't played recently\n\t\t\treturn this.wrapLink(seed);\n\t\t}\n    \treturn this.wrapLink(next.id);\n\t}\n\n\twrapLink(id) {\n\t\treturn `https://youtu.be/${id}`;\n\t}\n\n\tasync init() {\n\t\t// There is really no reason to init in this type of piece, but we need this here anyway\n\t}\n\n\t// Technically left for more than just documentation\n\t/* eslint-disable no-empty-function */\n\tasync reload() {}\n\tunload() {}\n\tdisable() {}\n\tenable() {}\n\t/* eslint-enable no-empty-function */\n\n}\n\nPiece.applyToClass(Genre);\n\nmodule.exports = Genre;\n```\n\nHere we see some heavy customization. Additionally, there is a second argument to applyToClass, which is skips an array of methods to skip applying. Such as if you need to define special enable/disable behavior. But that makes our piece very easy to actually make now:\n\n```javascript\nconst Genre = require('../Genre');\n\nmodule.exports = class extends Genre {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tdescription: 'Electronic Dance Music',\n\t\t\texamples: [\n\t\t\t\t'Skrillex',\n\t\t\t\t'deadmou5',\n\t\t\t\t'The Chainsmokers'\n\t\t\t]\n\t\t});\n\t\tthis.seeds = [\n\t\t\t'QV1xUseG6Gg',\n\t\t\t'F0YYoo6oFoU',\n\t\t\t...\n\t\t\t'RhU9MZ98jxo'\n\t\t]\n\t}\n\n}\n```\n\nThis is great and all, but we need to register these pieces/store:\n\n```javascript\nconst { Client } = require('klasa');\nconst GenreStore = require('./GenreStore');\n\nclass MySwankyMusicBot extends Client {\n\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\t// make a new GenreStore\n\t\tthis.genres = new GenreStore();\n\t\t// Regester the GenreStore to be loaded, init, and available to be used as an arg to be looked up in commands\n\t\tthis.registerStore(this.genres)\n\t\t// Registers genres themselves to be able to be used as an arg to be looked up in commands for reload/enable/disable ect.\n\t\tthis.registerPiece('genre', this.genres);\n\t\t// optionally we can add more aliases for the piece\n\t\tthis.registerPiece('musicgenre', this.genres);\n\t}\n\n}\n\nnew MySwankyMusicBot().login('token-goes-here');\n```\n\nThen we use it in our player class I completely made up earlier like so:\n\n```javascript\n...\n\t// without going over setting up guild settings, or actually writing a player class\n\tconst nextSong = await this.client.genres.get(this.guild.settings.genre).getNext(this);\n\t// nextSong should now be a pseudo random song based on the genre seeds and what has recently played\n...\n```\n","path":"tutorials/PieceStores.md"},"Included Providers":{"name":"Included Providers","type":"md","content":"## json\n\nThe basic data storage provider for klasa. Uses atomic methods from [fs-nextra](https://fs-nextra.js.org) to virtually eliminate the possiblity of data corruption. (Similar to what node-localstorage does, without bloat/a ton of dependancies)\n\n**Source:**\n\n[providers/json.js](https://github.com/dirigeants/klasa/blob/master/src/providers/json.js)\n\n## Further Reading:\n\n- {@tutorial IncludedCommands}\n- {@tutorial IncludedEvents}\n- {@tutorial IncludedExtendables}\n- {@tutorial IncludedFinalizers}\n- {@tutorial IncludedInhibitors}\n- {@tutorial IncludedLanguages}\n- {@tutorial IncludedMonitors}\n","path":"tutorials/IncludedProviders.md"},"Creating Languages":{"name":"Creating Languages","type":"md","content":"Languages provide localizations to your bot. The built in ones allow you full control over anything the core bot will say. Transferring them (disabling those you don't want to use), and adding on to them, allows you to have a completely multi-lingual bot.\n\nLanguages have the following syntax:\n\n```javascript\nconst { Language } = require('klasa');\n\nmodule.exports = class extends Language {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'myLanguageName',\n            enabled: true\n        });\n\n        this.language = {\n            DEFAULT: (key) => `${key} has not been localized for en-US yet.`,\n\t\t\tDEFAULT_LANGUAGE: 'Default Language',\n\t\t\tSETTING_GATEWAY_EXPECTS_GUILD: 'The parameter <Guild> expects either a Guild or a Guild Object.',\n            // ...\n            COMMAND_CONF_RESET: (key, response) => `The key **${key}** has been reset to: \\`${response}\\``\n        }\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n        // please note, that as the Language is loaded before the client is loaded, using this.client in a literal sense may throw errors such as: this.client.user.username would throw \"can't get property username of null\"\n\t}\n\n};\n```\n\n## Configuration\n\n| Name        | Default       | Type    | Description                            |\n| ----------- | ------------- | ------- | -------------------------------------- |\n| **name**    | `theFileName` | string  | The name of the language               |\n| **enabled** | `true`        | boolean | Whether the language is enabled or not |\n\n## Using Languages:\n\nThere are some extendables to help use languages. msg.language will return the language that is either default (if dms) or the guild's configured language. All languages have a get method, which is used for key lookup and function arg passing.\n\n```javascript\nmsg.language.get('DEFAULT_LANGUAGE'); // returns 'Default Language' in this example, but if the guild has fr-FR as the configured language it would respond 'Langue par défaut'\nmsg.language.get('COMMAND_CONF_RESET', 'prefix', '%') // returns 'The key **prefix** has been reset to: \\`%\\`' in this example, but if the guild has fr-FR as the configured language it would respond 'La clef **prefix** a été réinitialisée à : \\`%\\`'\n```\n\nAdditionally, if one language is lagging behind another, the bot will let the user know, and provide the string in the bot's default language as follows:\n\n```javascript\nmsg.language.get('SomeKeyThatExistsOnlyInEnlgish');\n\n// Assuming the bot is configured for fr-FR, the response would be:\n/*\n *`SomeKeyThatExistsOnlyInEnlgish n'a pas encore été traduit en 'fr-FR'.\n *\n *Langue par défaut:\n *Whatever that key would respond to normally in english.`\n */\n```\n\nAlso, if a language is disabled, and a guild has it configured, the default language will be used exclusivly until either that language is no-longer disabled, or the guild configures another enabled language.\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingFinalizers}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}","path":"tutorials/CreatingLanguages.md"},"Creating Finalizers":{"name":"Creating Finalizers","type":"md","content":"Finalizers are functions run after successful commands, and this is the reason of why all commands **must** return an\n[Object Promise](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nFinalizers have the following syntax:\n\n```javascript\nconst { Finalizer } = require('klasa');\n\nmodule.exports = class extends Finalizer {\n\n\tconstructor(...args) {\n\t\tsuper(...args, {\n\t\t\tname: 'myFinalizerName',\n            enabled: true\n        });\n\t}\n\n\trun(msg, mes, start) {\n\t\t// This is where you place the code you want to run for your finalizer\n\t}\n\n\tasync init() {\n\t\t// You can optionally define this method which will be run when the bot starts (after login, so discord data is available via this.client)\n\t}\n\n};\n```\n\n## Configuration\n\n| Name        | Default       | Type    | Description                             |\n| ----------- | ------------- | ------- | --------------------------------------- |\n| **name**    | `theFileName` | string  | The name of the finalizer               |\n| **enabled** | `true`        | boolean | Whether the finalizer is enabled or not |\n\n## Arguments:\n\n- **msg**: The message object.\n- **mes**: The value the command returns.\n- **start**: The time in which the command has been run, by `performance.now()`, ideal for benchmarking.\n\n## Existing finalizers\n\nKlasa has two preinstalled finalizers: `commandCooldown` and `commandlogging`.\n\n### commandCooldown\n\nThis finalizer applies the cooldown from the commands' `Command.cooldown` (if exists and its value is above `0`).\n\n### commandlogging\n\nThis finalizer, unlike commandCooldown, it's only run if the property `cmdLogging` of\nyour Klasa's client configs is set to `true`. It prints in the cmd prompt the command run, where,\nthe user who ran it, and the time it took to process the command.\n\n## Further Reading:\n\n- {@tutorial CreatingCommands}\n- {@tutorial CreatingEvents}\n- {@tutorial CreatingExtendables}\n- {@tutorial CreatingInhibitors}\n- {@tutorial CreatingLanguages}\n- {@tutorial CreatingMonitors}\n- {@tutorial CreatingProviders}","path":"tutorials/CreatingFinalizers.md"},"Understanding SettingGateway":{"name":"Understanding SettingGateway","type":"md","content":"# SettingGateway\n\nThe SettingGateway is designed to provide users a very useful interface for managing data. Each instance is able to handle a completely different schema and database.\n\nBy default, Klasa uses the [json](https://github.com/dirigeants/klasa/blob/master/src/providers/json.js) provider. Do not be fooled and insta-replace with SQLite, Klasa's JSON provider writes the data [atomically](https://en.wikipedia.org/wiki/Atomicity_(database_systems)), in other words, it is very rare for the data to corrupt.\n\nHowever, as Klasa works on a [NoSQL](https://en.wikipedia.org/wiki/NoSQL) environment, SQL databases cannot be used directly, for that, you need a special set of methods and properties to make the provider {@link SQL} compatible.\n\n## Change the *provider's engine*.\n\nFor example, let's say I have downloaded the *levelup* provider and I want to work with it, then we go to your main script file (`app.js`, `bot.js`..., wherever you declare the new Klasa.Client), and write the following code:\n\n```javascript\nprovider: { engine: \"levelup\" }\n```\n\nYour Klasa's configuration will look something like this:\n\n```javascript\nconst client = new Klasa.Client({\n  ownerID: \"\",\n  prefix: \"k!\",\n  clientOptions: {},\n  provider: { engine: \"levelup\" },\n});\n\nclient.login(\"...\");\n```\n\nAnd now, you're using levelup's provider to store the data from SettingGateway.\n\nWhat happens when I use an engine that does not exist as a provider? Simply, SettingGateway will throw an error, it is enough user-friendly and readable, if that happens, make sure you wrote the provider's name correctly.\n\n## Add new 'keys' to the guild settings.\n\nAs {@link SettingGateway} extends {@link SchemaManager}, you can easily add new keys to your schema by simply calling `SettingGateway#add` (inherited from {@link SchemaManager.add}) by running this:\n\n```javascript\nclient.settings.guilds.add(key, options, force?);\n```\n\nWhere:\n\n- `key` is the key's name to add, `String` type.\n- `options` is an object containing the options for the key, such as `type`, `default`, `sql`, `array`...\n- `force` (defaults to `true`) is whether SchemaManager should update all documents/rows to match the new schema, using the `options.default` value.\n\nFor example, let's say I want to add a new settings key, called `modlogs`, which takes a channel.\n\n```javascript\nclient.settings.guilds.add(\"modlogs\", { type: \"TextChannel\" });\n```\n\nThis will create a new settings key, called `modlogs`, and will take a `TextChannel` type.\n\n> The force parameter defaults to `true` instead to `false`. It is also recommended to use it as it can avoid certain unwanted actions.\n\nBut now, I want to add another key, with name of `users`, *so I can set a list of blacklisted users who won't be able to use commands*, which will take an array of Users.\n\n```javascript\nclient.settings.guilds.add(\"users\", { type: \"User\", array: true });\n```\n\n> `options.array` defaults to `false`, and when `options.default` is not specified, it defaults to `null`, however, when `options.array` is `true`, `options.default` defaults to `[]` (empty array).\n\n## Editing keys from the guild settings.\n\nNow that I have a new key called `modlogs`, I want to configure it outside the `conf` command, how can we do this?\n\n```javascript\nclient.settings.guilds.update(msg.guild, { modlogs: \"267727088465739778\" });\n```\n\nCheck: {@link SettingGateway.update}\n\n> You can use a Channel instance, {@link SettingResolver} will make sure the input is valid and the database gets an **ID** and not an object.\n\nNow, I want to **add** a new user user to the `users` key, which takes an array.\n\n```javascript\nclient.settings.guilds.updateArray(msg.guild, \"add\", \"users\", \"146048938242211840\");\n```\n\nThat will add the user `\"146048938242211840\"` to the `users` array. To remove it:\n\n```javascript\nclient.settings.guilds.updateArray(msg.guild, \"remove\", \"users\", \"146048938242211840\");\n```\n\nCheck: {@link SettingGateway.updateArray}\n\n## Removing a key from the guild settings.\n\nI have a key which is useless for me, so I *want* to remove it from the schema.\n\n```javascript\nclient.settings.guilds.remove(\"users\");\n```\n\n> Do not confuse `SchemaManager#remove` and `SchemaManager#delete`, the first one deletes an entry from the schema, whereas the second deletes an entry for the selected key from the database.\n\n## Add a key to the guild settings if it doesn't exist.\n\nIn [Klasa-Pieces](https://github.com/dirigeants/klasa-pieces/), specially, some pieces require a key from the settings to work, however, the creator of the pieces does not know if the user who downloads the piece has it, so this function becomes is useful in this case.\n\n```javascript\nasync function() {\n  if (!client.settings.guilds.schema.modlog) {\n    await client.settings.guilds.add(\"modlog\", { type: \"TextChannel\" });\n  }\n}\n```\n\n## How can I create new SettingGateway instances?\n\n**1.** By using {@link SettingsCache}, (available from `client.settings`).\n\nLet's say I want to add a new SettingGateway instance, called `users`, which input takes users, and stores a quote which is a string between 2 and 140 characters.\n\n```javascript\nasync function validate(resolver, user) {\n  const result = await resolver.user(user);\n  if (!result) throw \"The parameter <User> expects either a User ID or a User Object.\";\n  return result;\n};\n\nconst schema = {\n  quote: {\n    type: \"String\",\n    default: null,\n    array: false,\n    min: 2,\n    max: 140,\n  },\n};\n\nclient.settings.add(\"users\", validate, schema);\n```\n\n> The `validate` function must be a [**function**](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function), not a [**Arrow Function**](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions), the difference between them is that an arrow function binds `this` to wherever the function has been created (for example, the `exports` from your eval command, if you are doing this with eval), while the normal functions does not do this.\n\n> If the `validate` function does not resolve **Guild** type, you might want to use the third argument of `SettingGateway#update`, which takes a Guild resolvable.\n\nAnd then, you can access to it by:\n\n```javascript\nclient.settings.users;\n``` \n\n**2.** By extending SettingGateway (you can use it in `require(\"klasa\").SettingGateway`), which is a bit hacky but gives you total freedom and customization, this method may not completely work and needs some knowledge, however, as this practise is not completely supported, nothing stops you from doing this.\n","path":"tutorials/UnderstandingSettingGateway.md"},"Understanding Permission Levels":{"name":"Understanding Permission Levels","type":"md","content":"Permission Levels are what defines who has permission to use what command. They cascade up to a permission level break, so guild owners can do everything the lower levels can do, and so on.\n\nFor instace the conf command requires level 6 to run, by default this is how it works:\n\n- level 6 requires 'MANAGE_GUILD' Permission: true/false\n- level 7 is the guild Owner: true/false\n- level 8 is not defined, and always returns false\n- level 9 is the bot owner, and has break so we will stop checking higher rules: true/false\n\nIf any check from 6-9 returns true, the user will be able to run that command. Also, if no break is encountered, the command will silently fail, instead of telling the user \"they don't have permission to use x command\"...\n\n## Creating Completely Custom PermissionLevels\n\nEach level consists of a number (the level), a boolean (whether the level is a break or not), and a function (the check function that returns true or false). {@link PermissionLevels.addLevel}\n\nExample:\n\n```javascript\nconst { Client, PermissionLevels } = require('klasa');\nconst config = require('./config.json');\n\nconfig.permissionLevels = new PermissionLevels()\n//Optionally you can pass a number to set a custom number of permission levels. It is not advised however, as internal commands expect 10 to be the highest permission level. Modifying away from 10 without further modification of all core commands, could put your server at risk of malicious users using the core eval command.\n\t.addLevel(0, false, () => true)\n\t// everyone can use these commands\n\t.addLevel(6, false, (client, msg) => msg.guild && msg.member.permissions.has('MANAGE_GUILD'))\n\t// Members of guilds must have 'MANAGE_GUILD' permission\n\t.addLevel(7, false, (client, msg) => msg.guild && msg.member === msg.guild.owner)\n\t// The member using this command must be the guild owner\n\t.addLevel(9, true, (client, msg) => msg.author === client.owner)\n\t// Allows the Bot Owner to use any lower commands, and causes any command with a permission level 9 or lower to return an error if no check passes.\n\t.addLevel(10, false, (client, msg) => msg.author === client.owner);\n\t// Allows the bot owner to use Bot Owner only commands, which silently fail for other users.\n\nnew Client(config).login(config.token);\n```\n\n## Customizing the default PermissionLevels\n\nAnother way you can customize permission levels is simply modifying the defaultPermissionLevels:\n\nExample:\n\n```javascript\nconst { Client } = require('klasa');\nconst config = require('./config.json');\n\nClient.defaultPermissionLevels\n    .addLevel(3, false, ...)\n\t// let some group of people who solved some easteregg clues use a special command/some custom non-admin role\n    .addLevel(6, false, (client, msg) => msg.guild && msg.member.permissions.has('ADMINISTRATOR'))\n\t// Make the requirements to use the conf command stricter than just who can add the bot to the guild\n    .addLevel(8, false, (client, msg) => client.config.botSupportTeam.includes(msg.author.id));\n\t// add a role above guild owners that let your support team help setup/troubleshoot on other guilds.\n\nnew Client(config).login(config.token);\n```\n\n## What's different from Komada?\n\nPermission levels are fairly close to the same as Komada Permission levels, with a few exceptions.\n\n### The default permission level structure is different: {@link KlasaClient.defaultPermissionLevels}\n\n| Level | Break | Description                                           |\n| ----- | ----- | ----------------------------------------------------- |\n| 0     | false | Everyone can use these commands                       |\n| 6     | false | Members of guilds must have 'MANAGE_GUILD' permission |\n| 7     | false | Guild Owner                                           |\n| 9     | true  | Bot Owner                                             |\n| 10    | false | Bot Owner (silent)                                    |\n\n>This gives the bot creator a more blank slate to work with when first creating a bot. (Not all bots are mod bots, so mod/admin roles were largly unneed. Also there is infinitly more that you would want to put between 0 and administrative users, than between Guild Owner and Bot Owner). This helps keep bot creators from having to completely \"remake the wheel\" of permissions in almost all cases, without preventing that if wanted. (This fixes most cases of those who perpetually had to transfer/modify core commands to match their custom permissionLevels.)\n\n### Since inhibitors are async in Klasa, check functions may be async\n\nSo you can have:\n\n```javascript\n    .addLevel(3, false, async(client, msg) => {\n\t\tconst value = await someAsyncFunction();\n\t\treturn value === someOtherValue;\n\t});\n```\n\n### Levels may be Overwritten/You can have any number of levels\n\nCurrently in Komada, if you try to overwrite a level, it will throw an error. And PermissionLevels must be from 0-10 on komada. *(This may change in the future)*\n","path":"tutorials/UnderstandingPermissionLevels.md"},"Understanding Usage Strings":{"name":"Understanding Usage Strings","type":"md","content":"## Usage Structure\n\n`<>` required argument, `[]` optional argument `<Name:Type{Min,Max}/Regex/Flags>`\n\n- **Name** Mostly used for debugging message, unless the type is Literal in which it compares the argument to the name.\n- **Type** The type of variable you are expecting.\n- **Min, Max** Minimum or Maximum for a giving variable (works on strings in terms of length, and on all types of numbers in terms of value) You are allowed to define any combination of min and max. Omit for none, `{min}` for min, `{,max}` for max. If you set `min` and `max` with the same integer, then the provided string must have equal length.\n- **Regex, Flags** A regular expression with double escaped `\\` to match against the argument. It is only valid for regex types of arguments, but gives you great flexibility on custom argument parsing. Flags are regex flags to apply to the regex pattern.\n- **Special Repeat Tag** `[...]` will repeat the last usage optionally until you run out of arguments. Useful for doing something like `<SearchTerm:str> [...]` which will allow you to take as many search terms as you want, per your Usage Delimiter.\n\n> Note: You can set multiple options in an argument by writting `|`. For example: `<Message:msg|Content:string{4,16}>` will work when you provide a message ID or a string with a length between 4 and 16 (including both limits).\n\n### Usage Types\n\n| Type                       | Description                                                                                                                        |\n| -------------------------: | ---------------------------------------------------------------------------------------------------------------------------------- |\n| `literal`                  | Literally equal to the Name. This is the default type if none is defined.                                                          |\n| `boolean`                  | A [Boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean).                             |\n| `float` , `num` , `number` | A [Floating Point Number](https://en.wikipedia.org/wiki/Floating-point_arithmetic).                                                |\n| `int` , `integer`          | An [Integer](https://en.wikipedia.org/wiki/Integer).                                                                               |\n| `reg` , `regex` , `regexp` | A [Regular Expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).                   |\n| `str` , `string`           | A [String](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String).                                  |\n| `url`                      | A [URL](https://en.wikipedia.org/wiki/URL).                                                                                        |\n| `channel`                  | A [TextChannel](https://discord.js.org/#/docs/main/master/class/TextChannel) instance returned from the channel ID or channel tag. |\n| `guild`                    | A [Guild](https://discord.js.org/#/docs/main/master/class/Guild) instance returned from the guild ID.                              |\n| `member`                   | A [GuildMember](https://discord.js.org/#/docs/main/master/class/GuildMember) instance returned from the member ID or mention.      |\n| `msg` , `message`          | A [Message](https://discord.js.org/#/docs/main/master/class/Message) instance returned from the message ID.                        |\n| `role`                     | A [Role](https://discord.js.org/#/docs/main/master/class/Role) instance returned from the role ID or mention.                      |\n| `user` , `mention`         | A [User](https://discord.js.org/#/docs/main/master/class/User) instance returned from the user ID or mention.                      |\n| `piece`                    | Any piece, whichever resolves first in order of piece types alphabetically.                                                        |\n| `cmd` , `command`          | A {@link Command} instance returned from the command name or alias.                                                                |\n| `event`                    | An {@link Event} instance returned from the event name.                                                                            |\n| `inhibitor`                | An {@link Inhibitor} instance returned from the inhibitor name.                                                                    |\n| `finalizer`                | A {@link Finalizer} instance returned from the finalizer name.                                                                     |\n| `language`                 | A {@link Language} instance returned from the language name.                                                                       |\n| `monitor`                  | A {@link Monitor} instance returned from the monitor name.                                                                         |\n| `provider`                 | A {@link Provider} instance returned from the provider name.                                                                       |\n\n> Note: `Literal` is very useful in arguments with multiple options.\n\n___\n\n# Using arguments in your command.\n\nNow, after we understand how to configurate the command, we'll start writting it:\n\n```javascript\nasync run(msg, [...params]) {\n\t// This is where you place the code you want to run when your command is called\n}\n```\n\n`[...params]` represents a variable number of parameters given when the command is run. The name of the parameters in the array (and their count) is determined by the `usage` property and its given arguments.\n\n> Note that the commands' parameters are an array. This is a trick called [Destructuring assignment](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment).\n\nFor example, when you have: `\"<Message:msg> <delete|edit> [newContent:string]\"` as your usage, and `\"|\"` as your usageDelim, then the following code block is an example of how it would look like, and how we would work with them.\n\n```javascript\nasync run(msg, [message, action, newContent]) {\n  // code\n};\n```\n\nIn which `message` is the argument assigned to the message object as provided in `<Message:msg>` argument from usage. Same does `action` for `<delete|edit>` and respectively.\n\n> Keep in mind that we declared `newContent` as an optional argument, if it's not provided, it'll return undefined.\n\nKeep in mind that arguments are delimited by the character or combination of characters written in *usageDelim*. In this case, we have assigned the character `|` for it. How do we use this command? Easy:\n\n`+messager 293107496191655936|delete`\n\nThe line above will execute the command with the name `messager` (or a command with `messager` as an alias), it'll use [Channel.messages.fetch](https://discord.js.org/#/docs/main/master/class/MessageStore?scrollTo=fetch). If the message is not found (you mistyped it or the message is in another channel) it'll warn you that the message hasn't been found. The next argument is a literal, in which must be either `delete` or `edit`.\n\n# Using regex arguments in your command.\n\nRegex arguments give you even more flexibility to define custom matching. Regex in usage needs to be double escaped like the following: `<hexColor:regex/#?([\\\\da-f]{6})/i>`. That regex will resolve into: `/#?([\\da-f]{6})/i` which should match any hexcolor string. When you use a regex argument, the result of [RegExp.prototype.exec](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec) will be passed into the command.\n\nSo we can do the following destructuring to get the first matching group of the hexColor arg:\n\n```javascript\nasync run(msg, [[, hexColor]]) {\n  // code\n};\n```\n\nSo the command `+getrgb #ab24ff` would make hexColor: 'ab24ff'.\n","path":"tutorials/UnderstandingUsageStrings.md"}}}},"classes":[{"name":"KlasaClient","description":"The client for handling everything. See {@tutorial GettingStarted} for more information how to get started using this class.","extends":["external:Client"],"construct":{"name":"KlasaClient","description":"Constructs the klasa client","params":[{"name":"config","description":"The config to pass to the new client","type":[[["KlasaClientConfig"]]]}]},"props":[{"name":"config","description":"The config passed to the new Klasa.Client","type":[[["KlasaClientConfig"]]],"meta":{"line":86,"file":"Client.js","path":"src/lib"}},{"name":"coreBaseDir","description":"The directory to the node_modules folder where Klasa exists","type":[[["string"]]],"meta":{"line":98,"file":"Client.js","path":"src/lib"}},{"name":"clientBaseDir","description":"The directory where the user files are at","type":[[["string"]]],"meta":{"line":105,"file":"Client.js","path":"src/lib"}},{"name":"console","description":"The console for this instance of klasa. You can disable timestmaps, colors, and add writable streams as config options to configure this.","type":[[["KlasaConsole"]]],"meta":{"line":112,"file":"Client.js","path":"src/lib"}},{"name":"argResolver","description":"The argument resolver","type":[[["ArgResolver"]]],"meta":{"line":125,"file":"Client.js","path":"src/lib"}},{"name":"commands","description":"The cache where commands are stored","type":[[["CommandStore"]]],"meta":{"line":132,"file":"Client.js","path":"src/lib"}},{"name":"inhibitors","description":"The cache where inhibitors are stored","type":[[["InhibitorStore"]]],"meta":{"line":139,"file":"Client.js","path":"src/lib"}},{"name":"finalizers","description":"The cache where finalizers are stored","type":[[["FinalizerStore"]]],"meta":{"line":146,"file":"Client.js","path":"src/lib"}},{"name":"monitors","description":"The cache where monitors are stored","type":[[["MonitorStore"]]],"meta":{"line":153,"file":"Client.js","path":"src/lib"}},{"name":"languages","description":"The cache where languages are stored","type":[[["LanguageStore"]]],"meta":{"line":160,"file":"Client.js","path":"src/lib"}},{"name":"providers","description":"The cache where providers are stored","type":[[["ProviderStore"]]],"meta":{"line":167,"file":"Client.js","path":"src/lib"}},{"name":"events","description":"The cache where events are stored","type":[[["EventStore"]]],"meta":{"line":174,"file":"Client.js","path":"src/lib"}},{"name":"extendables","description":"The cache where extendables are stored","type":[[["ExtendableStore"]]],"meta":{"line":181,"file":"Client.js","path":"src/lib"}},{"name":"pieceStores","description":"A Store registry","type":[[["external",":"]]],"meta":{"line":188,"file":"Client.js","path":"src/lib"}},{"name":"commandMessages","description":"The cache of command messages and responses to be used for command editing","type":[[["external",":"]]],"meta":{"line":195,"file":"Client.js","path":"src/lib"}},{"name":"permissionLevels","description":"The permissions structure for this bot","type":[[["PermissionLevels"]]],"meta":{"line":202,"file":"Client.js","path":"src/lib"}},{"name":"commandMessageLifetime","description":"The threshold for how old command messages can be before sweeping since the last edit in seconds","type":[[["number"]]],"meta":{"line":209,"file":"Client.js","path":"src/lib"}},{"name":"commandMessageSweep","description":"The interval duration for which command messages should be sweept in seconds","type":[[["number"]]],"meta":{"line":216,"file":"Client.js","path":"src/lib"}},{"name":"ready","description":"Whether the client is truely ready or not","type":[[["boolean"]]],"meta":{"line":223,"file":"Client.js","path":"src/lib"}},{"name":"methods","description":"Additional methods to be used elsewhere in the bot","type":[[["object"]]],"props":[{"name":"Collection","description":"A discord.js collection","type":[[["class"]]]},{"name":"Embed","description":"A discord.js Message Embed","type":[[["class"]]]},{"name":"MessageCollector","description":"A discord.js MessageCollector","type":[[["class"]]]},{"name":"Webhook","description":"A discord.js WebhookClient","type":[[["class"]]]},{"name":"escapeMarkdown","description":"A discord.js escape markdown function","type":[[["function"]]]},{"name":"splitMessage","description":"A discord.js split message function","type":[[["function"]]]},{"name":"CommandMessage","description":"A command message","type":[[["class"]]]},{"name":"util","description":"A collection of static methods to be used thoughout the bot","type":[[["Util"]]]}],"meta":{"line":238,"file":"Client.js","path":"src/lib"}},{"name":"settings","description":"The object where the gateways are stored settings","type":[[["Object"]]],"meta":{"line":254,"file":"Client.js","path":"src/lib"}},{"name":"application","description":"The application info cached from the discord api","type":[[["external",":"]]],"meta":{"line":261,"file":"Client.js","path":"src/lib"}},{"name":"invite","description":"The invite link for the bot","readonly":true,"type":[[["string"]]],"meta":{"line":282,"file":"Client.js","path":"src/lib"}},{"name":"owner","description":"The owner for this bot","readonly":true,"type":[[["external",":"]]],"meta":{"line":377,"file":"Client.js","path":"src/lib"}},{"name":"defaultPermissionLevels","description":"The default PermissionLevels","scope":"static","type":[[["PermissionLevels"]]],"meta":{"line":435,"file":"Client.js","path":"src/lib"}}],"methods":[{"name":"validatePermissionLevels","description":"Validates the permission structure passed to the client","access":"private","returns":[[["PermissionLevels"]]],"meta":{"line":294,"file":"Client.js","path":"src/lib"}},{"name":"registerStore","description":"Registers a custom store to the client","params":[{"name":"store","description":"The store that pieces will be stored in.","type":[[["Store"]]]}],"returns":{"types":[[["KlasaClient"]]],"description":"this client"},"meta":{"line":307,"file":"Client.js","path":"src/lib"}},{"name":"unregisterStore","description":"Unregisters a custom store from the client","params":[{"name":"storeName","description":"The store that pieces will be stored in.","type":[[["Store"]]]}],"returns":{"types":[[["KlasaClient"]]],"description":"this client"},"meta":{"line":318,"file":"Client.js","path":"src/lib"}},{"name":"registerPiece","description":"Registers a custom piece to the client","params":[{"name":"pieceName","description":"The name of the piece, if you want to register an arg resolver for this piece","type":[[["string"]]]},{"name":"store","description":"The store that pieces will be stored in.","type":[[["Store"]]]}],"returns":{"types":[[["KlasaClient"]]],"description":"this client"},"meta":{"line":330,"file":"Client.js","path":"src/lib"}},{"name":"unregisterPiece","description":"Unregisters a custom piece from the client","params":[{"name":"pieceName","description":"The name of the piece","type":[[["string"]]]}],"returns":{"types":[[["KlasaClient"]]],"description":"this client"},"meta":{"line":347,"file":"Client.js","path":"src/lib"}},{"name":"login","description":"Use this to login to Discord with your bot","params":[{"name":"token","description":"Your bot token","type":[[["string"]]]}],"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":358,"file":"Client.js","path":"src/lib"}},{"name":"_ready","description":"The once ready function for the client to init all pieces","access":"private","meta":{"line":386,"file":"Client.js","path":"src/lib"}},{"name":"sweepCommandMessages","description":"Sweeps command messages based on the lifetime parameter","params":[{"name":"lifetime","description":"The threshold for how old command messages can be before sweeping since the last edit in seconds","type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"The amount of messages swept"},"meta":{"line":409,"file":"Client.js","path":"src/lib"}}],"events":[{"name":"klasaReady","description":"Emitted when klasa is fully ready and initialized.","meta":{"line":443,"file":"Client.js","path":"src/lib"}},{"name":"log","description":"A central logging event for klasa.","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]},{"name":"type","description":"The type of log: 'log', 'debug', 'warn', or 'error'.","optional":true,"default":"'log'","type":[[["string"]]]}],"meta":{"line":449,"file":"Client.js","path":"src/lib"}},{"name":"verbose","description":"An event for handling verbose logs","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]}],"meta":{"line":457,"file":"Client.js","path":"src/lib"}},{"name":"wtf","description":"An event for handling wtf logs (what a terrible failure)","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]}],"meta":{"line":464,"file":"Client.js","path":"src/lib"}},{"name":"commandUnknown","description":"Emitted when an unknown command is called.","params":[{"name":"message","description":"The message that triggered the command","type":[[["external",":"]]]},{"name":"command","description":"The command attempted to run","type":[[["string"]]]}],"meta":{"line":471,"file":"Client.js","path":"src/lib"}},{"name":"commandInhibited","description":"Emitted when a command has been inhibited.","params":[{"name":"message","description":"The message that triggered the command","type":[[["external",":"]]]},{"name":"command","description":"The command triggered","type":[[["Command"]]]},{"name":"response","description":"The reason why it was inhibited if not silent","nullable":true,"type":[[["string"]]]}],"meta":{"line":479,"file":"Client.js","path":"src/lib"}},{"name":"commandRun","description":"Emitted when a command has been run.","params":[{"name":"message","description":"The message that triggered the command","type":[[["CommandMessageProxy"]]]},{"name":"command","description":"The command run","type":[[["Command"]]]},{"name":"params","description":"The resolved parameters of the command","type":[[["Array","<"],["any",">"]]]},{"name":"response","description":"Usually a response message, but whatever the command returned.","nullable":true,"type":[[["any"]]]}],"meta":{"line":488,"file":"Client.js","path":"src/lib"}},{"name":"commandError","description":"Emitted when a command has errored.","params":[{"name":"message","description":"The message that triggered the command","type":[[["CommandMessageProxy"]]]},{"name":"command","description":"The command run","type":[[["Command"]]]},{"name":"params","description":"The resolved parameters of the command","type":[[["Array","<"],["any",">"]]]},{"name":"error","description":"The command error","type":[[["string"]],[["Object"]]]}],"meta":{"line":498,"file":"Client.js","path":"src/lib"}},{"name":"monitorError","description":"Emitted when a monitor has errored.","params":[{"name":"message","description":"The message that triggered the monitor","type":[[["external",":"]]]},{"name":"monitor","description":"The monitor run","type":[[["Monitor"]]]},{"name":"error","description":"The monitor error","type":[[["string"]],[["Object"]]]}],"meta":{"line":508,"file":"Client.js","path":"src/lib"}},{"name":"settingUpdate","description":"Emitted when {@link SettingGateway.update}, {@link SettingGateway.updateArray} or {@link SettingGateway.reset} is run.","params":[{"name":"gateway","description":"The setting gateway with the updated setting","type":[[["SettingGateway"]]]},{"name":"id","description":"The identifier of the gateway that was updated","type":[[["string"]]]},{"name":"oldEntries","description":"The old settings entries","type":[[["Object"]]]},{"name":"newEntries","description":"The new settings entries","type":[[["Object"]]]}],"meta":{"line":517,"file":"Client.js","path":"src/lib"}},{"name":"pieceLoaded","description":"Emitted when a piece is loaded. (This can be spammy on bot startup or anytime you reload all of a piece type.)","params":[{"name":"piece","description":"The piece that was loaded","type":[[["Piece"]]]}],"meta":{"line":527,"file":"Client.js","path":"src/lib"}},{"name":"pieceUnloaded","description":"Emitted when a piece is unloaded.","params":[{"name":"piece","description":"The piece that was unloaded","type":[[["Piece"]]]}],"meta":{"line":534,"file":"Client.js","path":"src/lib"}},{"name":"pieceReloaded","description":"Emitted when a piece is reloaded.","params":[{"name":"piece","description":"The piece that was reloaded","type":[[["Piece"]]]}],"meta":{"line":541,"file":"Client.js","path":"src/lib"}},{"name":"pieceEnabled","description":"Emitted when a piece is enabled.","params":[{"name":"piece","description":"The piece that was enabled","type":[[["Piece"]]]}],"meta":{"line":548,"file":"Client.js","path":"src/lib"}},{"name":"pieceDisabled","description":"Emitted when a piece is disabled.","params":[{"name":"piece","description":"The piece that was disabled","type":[[["Piece"]]]}],"meta":{"line":555,"file":"Client.js","path":"src/lib"}}],"meta":{"line":24,"file":"Client.js","path":"src/lib"}},{"name":"ArgResolver","description":"The command argument resolver","extends":["Resolver"],"methods":[{"name":"piece","description":"Resolves a piece","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":[[["Piece"]]],"meta":{"line":19,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"store","description":"Resolves a store","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":[[["Store"]]],"meta":{"line":38,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"command","description":"Resolves a command","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":[[["Command"]]],"meta":{"line":55,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"cmd","description":"Resolves a command","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Command"]]],"nullable":true},"meta":{"line":69,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"event","description":"Resolves an event","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Event"]]],"nullable":true},"meta":{"line":86,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"extendable","description":"Resolves an extendable","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Extendable"]]],"nullable":true},"meta":{"line":103,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"finalizer","description":"Resolves a finalizer","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Finalizer"]]],"nullable":true},"meta":{"line":120,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"inhibitor","description":"Resolves a inhibitor","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Inhibitor"]]],"nullable":true},"meta":{"line":137,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"monitor","description":"Resolves a monitor","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Monitor"]]],"nullable":true},"meta":{"line":154,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"language","description":"Resolves a language","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Language"]]],"nullable":true},"meta":{"line":171,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"provider","description":"Resolves a provider","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["Provider"]]],"nullable":true},"meta":{"line":187,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"message","description":"Resolves a message","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":204,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"msg","description":"Resolves a message","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":218,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"mention","description":"Resolves a user","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":235,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"user","description":"Resolves a user","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":249,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"member","description":"Resolves a member","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":266,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"channel","description":"Resolves a channel","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":283,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"guild","description":"Resolves a guild","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":300,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"role","description":"Resolves a role","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":317,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"literal","description":"Resolves a literal","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":334,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"boolean","description":"Resolves a boolean","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["boolean"]]],"nullable":true},"meta":{"line":350,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"bool","description":"Resolves a boolean","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["boolean"]]],"nullable":true},"meta":{"line":364,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"string","description":"Resolves a string","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":381,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"str","description":"Resolves a string","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":395,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"integer","description":"Resolves a integer","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":411,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"int","description":"Resolves a integer","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":425,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"num","description":"Resolves a number","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":446,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"number","description":"Resolves a number","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":460,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"float","description":"Resolves a number","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":474,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"reg","description":"Resolves an argument based on a regular expression","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":495,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"regex","description":"Resolves an argument based on a regular expression","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":512,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"regexp","description":"Resolves an argument based on a regular expression","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":526,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"url","description":"Resolves a hyperlink","params":[{"name":"arg","description":"This arg","type":[[["string"]]]},{"name":"currentUsage","description":"This current usage","type":[[["Object"]]]},{"name":"possible","description":"This possible usage id","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":540,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"minOrMax","description":"Checks min and max values","scope":"static","params":[{"name":"value","description":"The value to check against","type":[[["number"]]]},{"name":"min","description":"The minimum value","nullable":true,"type":[[["number"]]]},{"name":"max","description":"The maxiumum value","nullable":true,"type":[[["number"]]]},{"name":"currentUsage","description":"The current usage","type":[[["Object"]]]},{"name":"possible","description":"The id of the current possible usage","type":[[["number"]]]},{"name":"repeat","description":"If it is a looping/repeating arg","type":[[["boolean"]]]},{"name":"msg","description":"The message that triggered the command","type":[[["external",":"]]]},{"name":"suffix","description":"An error suffix","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":560,"file":"ArgResolver.js","path":"src/lib/parsers"}}],"meta":{"line":7,"file":"ArgResolver.js","path":"src/lib/parsers"}},{"name":"Resolver","description":"The base resolver class","construct":{"name":"Resolver","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]}]},"props":[{"name":"regex","description":"Standard regular expressions for matching mentions and snowflake ids","scope":"static","type":[[["Object"]]],"props":[{"name":"userOrMember","description":"Regex for users or members","type":[[["RegExp"]]]},{"name":"channel","description":"Regex for channels","type":[[["RegExp"]]]},{"name":"role","description":"Regex for roles","type":[[["RegExp"]]]},{"name":"snowflake","description":"Regex for simple snowflake ids","type":[[["RegExp"]]]}],"meta":{"line":178,"file":"Resolver.js","path":"src/lib/parsers"}}],"methods":[{"name":"msg","description":"Fetch a Message object by its Snowflake or instanceof Message.","params":[{"name":"message","description":"The message snowflake to validate.","type":[[["Message"]],[["Snowflake"]]]},{"name":"channel","description":"The Channel object in which the message can be found.","type":[[["Channel"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":29,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"user","description":"Resolve a User object by its instance of User, GuildMember, or by its Snowflake.","params":[{"name":"user","description":"The user to validate.","type":[[["User"]],[["GuildMember"]],[["Message"]],[["Snowflake"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":40,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"member","description":"Resolve a GuildMember object by its instance of GuildMember, User, or by its Snowflake.","params":[{"name":"member","description":"The number to validate.","type":[[["GuildMember"]],[["User"]],[["Snowflake"]]]},{"name":"guild","description":"The Guild object in which the member can be found.","type":[[["Guild"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":59,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"channel","description":"Resolve a Channel object by its instance of Channel, or by its Snowflake.","params":[{"name":"channel","description":"The channel to validate.","type":[[["Channel"]],[["Snowflake"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":77,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"guild","description":"Resolve a Guild object by its instance of Guild, or by its Snowflake.","params":[{"name":"guild","description":"The guild to validate/find.","type":[[["Guild"]],[["Snowflake"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":89,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"role","description":"Resolve a Role object by its instance of Role, or by its Snowflake.","params":[{"name":"role","description":"The role to validate/find.","type":[[["Role"]],[["Snowflake"]]]},{"name":"guild","description":"The Guild object in which the role can be found.","type":[[["Guild"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":102,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"boolean","description":"Resolve a Boolean instance.","params":[{"name":"bool","description":"The boolean to validate.","type":[[["boolean"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"nullable":true},"meta":{"line":114,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"string","description":"Resolve a String instance.","params":[{"name":"string","description":"The string to validate.","type":[[["string"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":127,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"integer","description":"Resolve an Integer.","params":[{"name":"integer","description":"The integer to validate.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":137,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"float","description":"Resolve a Float.","params":[{"name":"number","description":"The float to validate.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":149,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"url","description":"Resolve a hyperlink.","params":[{"name":"hyperlink","description":"The hyperlink to validate.","type":[[["string"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":161,"file":"Resolver.js","path":"src/lib/parsers"}}],"meta":{"line":7,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"SettingResolver","description":"The setting resolver","extends":["Resolver"],"methods":[{"name":"user","description":"Resolves a user","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":17,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"channel","description":"Resolves a channel","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":31,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"textchannel","description":"Resolves a TextChannel","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":45,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"voicechannel","description":"Resolves a VoiceChannel","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":59,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"guild","description":"Resolves a guild","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":73,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"role","description":"Resolves a role","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["external",":"]]],"meta":{"line":87,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"boolean","description":"Resolves a boolean","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":101,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"string","description":"Resolves a string","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]},{"name":"minMax","description":"The minimum and maximum","type":[[["Object"]]]},{"name":"minMax.min","description":"The minumum value","nullable":true,"type":[[["number"]]]},{"name":"minMax.max","description":"The maximum value","nullable":true,"type":[[["number"]]]}],"returns":[[["string"]]],"meta":{"line":118,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"integer","description":"Resolves a integer","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]},{"name":"minMax","description":"The minimum and maximum","type":[[["Object"]]]},{"name":"minMax.min","description":"The minumum value","nullable":true,"type":[[["number"]]]},{"name":"minMax.max","description":"The maximum value","nullable":true,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":135,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"float","description":"Resolves a float","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]},{"name":"minMax","description":"The minimum and maximum","type":[[["Object"]]]},{"name":"minMax.min","description":"The minumum value","nullable":true,"type":[[["number"]]]},{"name":"minMax.max","description":"The maximum value","nullable":true,"type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":153,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"url","description":"Resolves a hyperlink","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":168,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"command","description":"Resolves a command","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["Command"]]],"meta":{"line":182,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"language","description":"Resolves a language","params":[{"name":"data","description":"The data to resolve","type":[[["any"]]]},{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]}],"returns":[[["Language"]]],"meta":{"line":196,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"msg","description":"Fetch a Message object by its Snowflake or instanceof Message.","inherits":"Resolver#msg","inherited":true,"params":[{"name":"message","description":"The message snowflake to validate.","type":[[["Message"]],[["Snowflake"]]]},{"name":"channel","description":"The Channel object in which the message can be found.","type":[[["Channel"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":29,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"member","description":"Resolve a GuildMember object by its instance of GuildMember, User, or by its Snowflake.","inherits":"Resolver#member","inherited":true,"params":[{"name":"member","description":"The number to validate.","type":[[["GuildMember"]],[["User"]],[["Snowflake"]]]},{"name":"guild","description":"The Guild object in which the member can be found.","type":[[["Guild"]]]}],"returns":{"types":[[["external",":"]]],"nullable":true},"meta":{"line":59,"file":"Resolver.js","path":"src/lib/parsers"}},{"name":"maxOrMin","description":"Check if the input is valid with min and/or max values.","scope":"static","params":[{"name":"guild","description":"The guild to resolve for","type":[[["external",":"]]]},{"name":"value","description":"The value to check.","type":[[["number"]]]},{"name":"min","description":"Min value.","nullable":true,"type":[[["number"]]]},{"name":"max","description":"Max value.","nullable":true,"type":[[["number"]]]},{"name":"name","description":"The name of the key being resolved","type":[[["string"]]]},{"name":"suffix","description":"The suffix to apply to the error messages","optional":true,"default":"''","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":214,"file":"SettingResolver.js","path":"src/lib/parsers"}}],"meta":{"line":7,"file":"SettingResolver.js","path":"src/lib/parsers"}},{"name":"CacheManager","description":"Manages the local cache","construct":{"name":"CacheManager","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"data","description":"The data stored for this SettingGateway instance.","type":[[["Collection"]]],"meta":{"line":21,"file":"CacheManager.js","path":"src/lib/settings"}}],"methods":[{"name":"get","description":"Get the data from the cache by its ID.","params":[{"name":"key","description":"The key to search for.","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":29,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"getAll","description":"Get all the data from the cache as an array of objects.","returns":[[["Array","<"],["Object",">"]]],"meta":{"line":38,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"set","description":"Save a new data to the cache.","params":[{"name":"key","description":"The data's key.","type":[[["string"]]]},{"name":"value","description":"The data's value.","type":[[["Object"]]]}],"returns":[[["any"]]],"meta":{"line":49,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"delete","description":"Delete the selected data from the cache by its ID.","params":[{"name":"key","description":"The data's key.","type":[[["string"]]]}],"returns":[[["any"]]],"meta":{"line":59,"file":"CacheManager.js","path":"src/lib/settings"}}],"meta":{"line":4,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"SchemaManager","description":"The Schema driver for SettingGateway","extends":["CacheManager"],"construct":{"name":"SchemaManager","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"schema","description":"The schema created for this SchemaManager instance.","type":[[["Object"]]],"meta":{"line":23,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"defaults","description":"The default values for this SchemaManager instance.","type":[[["Object"]]],"meta":{"line":29,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"data","description":"The data stored for this SettingGateway instance.","type":[[["Collection"]]],"meta":{"line":21,"file":"CacheManager.js","path":"src/lib/settings"}}],"methods":[{"name":"initSchema","description":"Initialize the SchemaManager.","returns":[[["void"]]],"meta":{"line":36,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"validateSchema","description":"Validate the Schema manager.","params":[{"name":"schema","description":"The Schema object that will be used for the configuration system.","type":[[["Object"]]]}],"returns":[[["void"]]],"meta":{"line":50,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"add","description":"Add a new key to the schema.","examples":["// Add a key called 'modlog', being a TextChannel.\nSchemaManager.add('modlog', { type: 'TextChannel' });\n\n// Add a key called 'playlist-length', being an Integer with minimum value of 5 and max 20, being 15 by default.\nSchemaManager.add('playlist-length', { type: 'Integer', default: 15, min: 5, max: 20 });"],"params":[{"name":"key","description":"The key to add.","type":[[["string"]]]},{"name":"options","description":"Options for the key.","type":[[["AddOptions"]]]},{"name":"force","description":"Whether this change should modify all configurations or not.","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":88,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"remove","description":"Remove a key from the schema.","examples":["// Remove a key called 'modlog'.\nSchemaManager.remove('modlog');"],"params":[{"name":"key","description":"The key to remove.","type":[[["string"]]]},{"name":"force","description":"Whether this change should modify all configurations or not.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":118,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"force","description":"Modify all configurations. Do NOT use this directly.","access":"private","params":[{"name":"action","description":"Whether reset, add, or delete.","type":[[["string"]]]},{"name":"key","description":"The key to update.","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":131,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"get","description":"Get the data from the cache by its ID.","inherits":"CacheManager#get","inherited":true,"params":[{"name":"key","description":"The key to search for.","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":29,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"getAll","description":"Get all the data from the cache as an array of objects.","inherits":"CacheManager#getAll","inherited":true,"returns":[[["Array","<"],["Object",">"]]],"meta":{"line":38,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"set","description":"Save a new data to the cache.","inherits":"CacheManager#set","inherited":true,"params":[{"name":"key","description":"The data's key.","type":[[["string"]]]},{"name":"value","description":"The data's value.","type":[[["Object"]]]}],"returns":[[["any"]]],"meta":{"line":49,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"delete","description":"Delete the selected data from the cache by its ID.","inherits":"CacheManager#delete","inherited":true,"params":[{"name":"key","description":"The data's key.","type":[[["string"]]]}],"returns":[[["any"]]],"meta":{"line":59,"file":"CacheManager.js","path":"src/lib/settings"}}],"meta":{"line":11,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"SettingGateway","description":"The gateway to all settings","extends":["SchemaManager"],"construct":{"name":"SettingGateway","params":[{"name":"store","description":"The SettingCache instance which initiated this SettingGateway","type":[[["SettingCache"]]]},{"name":"type","description":"The name of this instance of SettingGateway.","type":[[["string"]]]},{"name":"validateFunction","description":"The function validator for this instance of SettingGateway","type":[[["function"]]]},{"name":"schema","description":"The schema for this instance of SettingGateway","type":[[["Object"]]]}]},"props":[{"name":"store","description":"The SettingCache instance which initiated this SettingGateway.","readonly":true,"type":[[["SettingCache"]]],"meta":{"line":19,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"type","description":"The name of this instance of SettingGateway. The schema will be saved under 'name_Schema.json'.","type":[[["string"]]],"meta":{"line":27,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"engine","description":"The provider engine this instance of SettingGateway should use to handle your settings.","type":[[["string"]]],"meta":{"line":34,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"sql","description":"If the provider is SQL, this property is on charge to serialize/deserialize.","nullable":true,"type":[[["SQL"]]],"meta":{"line":43,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"validate","description":"The function validator for this instance of SettingGateway.","type":[[["function"]]],"meta":{"line":50,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"defaultDataSchema","description":"The schema for this instance of SettingGateway.","type":[[["object"]]],"meta":{"line":57,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"client","description":"The client this SettingGateway was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":261,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"resolver","description":"The resolver instance this SettingGateway uses to parse the data.","readonly":true,"type":[[["Resolver"]]],"meta":{"line":270,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"provider","description":"The provider this SettingGateway instance uses for the persistent data operations.","readonly":true,"type":[[["Provider"]]],"meta":{"line":279,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"schema","description":"The schema created for this SchemaManager instance.","type":[[["Object"]]],"meta":{"line":23,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"defaults","description":"The default values for this SchemaManager instance.","type":[[["Object"]]],"meta":{"line":29,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"data","description":"The data stored for this SettingGateway instance.","type":[[["Collection"]]],"meta":{"line":21,"file":"CacheManager.js","path":"src/lib/settings"}}],"methods":[{"name":"init","description":"Initialize the configuration for this gateway.","returns":[[["void"]]],"meta":{"line":69,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"create","description":"Create a new entry in the configuration.","params":[{"name":"input","description":"An object containing a id property, like discord.js objects, or a string.","type":[[["Object"]],[["string"]]]}],"returns":[[["void"]]],"meta":{"line":89,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"destroy","description":"Remove an entry from the configuration.","params":[{"name":"input","description":"A key to delete from the cache.","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":100,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"get","description":"Get an entry from the cache.","params":[{"name":"input","description":"A key to get the value for.","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":110,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"getResolved","description":"Updates an entry.","params":[{"name":"input","description":"An object containing a id property, like Discord.js objects, or a string.","type":[[["Object"]],[["string"]]]},{"name":"guild","description":"A Guild resolvable, useful for when the instance of SG doesn't aim for Guild settings.","optional":true,"default":null,"type":[[["external",":"]]]}],"returns":[[["Object"]]],"meta":{"line":121,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"sync","description":"Sync either all entries from the configuration, or a single one.","params":[{"name":"input","description":"An object containing a id property, like discord.js objects, or a string.","optional":true,"default":null,"type":[[["Object"]],[["string"]]]}],"returns":[[["void"]]],"meta":{"line":140,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"reset","description":"Reset a key's value to default from a entry.","params":[{"name":"input","description":"An object containing a id property, like Discord.js objects, or a string.","type":[[["Object"]],[["string"]]]},{"name":"key","description":"The key to reset.","type":[[["string"]]]}],"returns":[[["any"]]],"meta":{"line":159,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"update","description":"Updates an entry.","params":[{"name":"input","description":"An object or string that can be parsed by this instance's resolver.","type":[[["Object"]],[["string"]]]},{"name":"object","description":"An object with pairs of key/value to update.","type":[[["Object"]]]},{"name":"guild","description":"A Guild resolvable, useful for when the instance of SG doesn't aim for Guild settings.","optional":true,"default":null,"type":[[["Object"]],[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":177,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"ensureCreate","description":"Creates the settings if it did not exist previously.","params":[{"name":"target","description":"An object or string that can be parsed by this instance's resolver.","type":[[["Object"]],[["string"]]]}],"returns":[[["true"]]],"meta":{"line":203,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"updateArray","description":"Update an array from the configuration.","params":[{"name":"input","description":"An object containing a id property, like discord.js objects, or a string.","type":[[["Object"]],[["string"]]]},{"name":"action","description":"Either 'add' or 'remove'.","type":[[["add","'"]],[["remove","'"]]]},{"name":"key","description":"The key from the Schema.","type":[[["string"]]]},{"name":"data","description":"The value to be added or removed.","type":[[["any"]]]}],"returns":[[["boolean"]]],"meta":{"line":219,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"initSchema","description":"Initialize the SchemaManager.","inherits":"SchemaManager#initSchema","inherited":true,"returns":[[["void"]]],"meta":{"line":36,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"validateSchema","description":"Validate the Schema manager.","inherits":"SchemaManager#validateSchema","inherited":true,"params":[{"name":"schema","description":"The Schema object that will be used for the configuration system.","type":[[["Object"]]]}],"returns":[[["void"]]],"meta":{"line":50,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"add","description":"Add a new key to the schema.","inherits":"SchemaManager#add","inherited":true,"examples":["// Add a key called 'modlog', being a TextChannel.\nSchemaManager.add('modlog', { type: 'TextChannel' });\n\n// Add a key called 'playlist-length', being an Integer with minimum value of 5 and max 20, being 15 by default.\nSchemaManager.add('playlist-length', { type: 'Integer', default: 15, min: 5, max: 20 });"],"params":[{"name":"key","description":"The key to add.","type":[[["string"]]]},{"name":"options","description":"Options for the key.","type":[[["AddOptions"]]]},{"name":"force","description":"Whether this change should modify all configurations or not.","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":88,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"remove","description":"Remove a key from the schema.","inherits":"SchemaManager#remove","inherited":true,"examples":["// Remove a key called 'modlog'.\nSchemaManager.remove('modlog');"],"params":[{"name":"key","description":"The key to remove.","type":[[["string"]]]},{"name":"force","description":"Whether this change should modify all configurations or not.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":118,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"force","description":"Modify all configurations. Do NOT use this directly.","access":"private","inherits":"SchemaManager#force","inherited":true,"params":[{"name":"action","description":"Whether reset, add, or delete.","type":[[["string"]]]},{"name":"key","description":"The key to update.","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":131,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"getAll","description":"Get all the data from the cache as an array of objects.","inherits":"CacheManager#getAll","inherited":true,"returns":[[["Array","<"],["Object",">"]]],"meta":{"line":38,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"set","description":"Save a new data to the cache.","inherits":"CacheManager#set","inherited":true,"params":[{"name":"key","description":"The data's key.","type":[[["string"]]]},{"name":"value","description":"The data's value.","type":[[["Object"]]]}],"returns":[[["any"]]],"meta":{"line":49,"file":"CacheManager.js","path":"src/lib/settings"}},{"name":"delete","description":"Delete the selected data from the cache by its ID.","inherits":"CacheManager#delete","inherited":true,"params":[{"name":"key","description":"The data's key.","type":[[["string"]]]}],"returns":[[["any"]]],"meta":{"line":59,"file":"CacheManager.js","path":"src/lib/settings"}}],"meta":{"line":8,"file":"SettingGateway.js","path":"src/lib/settings"}},{"name":"SettingsCache","description":"SettingGateway's driver to make new instances of it, with the purpose to handle different databases simultaneously.","construct":{"name":"SettingsCache","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"resolver","description":"The resolver instance this SettingGateway uses to parse the data.","type":[[["SettingResolver"]]],"meta":{"line":24,"file":"SettingsCache.js","path":"src/lib/settings"}},{"name":"guilds","description":"The SettingGateway instance created to handle guild settings.","type":[[["SettingGateway"]]],"meta":{"line":30,"file":"SettingsCache.js","path":"src/lib/settings"}},{"name":"defaultDataSchema","description":"The data schema Klasa uses for guild settings.","readonly":true,"type":[[["Object"]]],"meta":{"line":85,"file":"SettingsCache.js","path":"src/lib/settings"}}],"methods":[{"name":"add","description":"Add a new instance of SettingGateway, with its own validateFunction and schema.","examples":["// Add a new SettingGateway instance, called 'users', which input takes users, and stores a quote which is a string between 2 and 140 characters.\nconst validate = async function(resolver, user) {\n\t const result = await resolver.user(user);\n\t if (!result) throw 'The parameter <User> expects either a User ID or a User Object.';\n\t return result;\n};\nconst schema = {\n\t quote: {\n\t\t type: 'String',\n\t\t default: null,\n\t\t array: false,\n\t\t min: 2,\n\t\t max: 140,\n\t },\n};\nSettingsCache.add('users', validate, schema);"],"params":[{"name":"name","description":"The name for the new instance.","type":[[["string"]]]},{"name":"validateFunction","description":"The function that validates the input.","type":[[["function"]]]},{"name":"schema","description":"The schema.","optional":true,"default":"{}","type":[[["Object"]]]}],"returns":[[["SettingGateway"]]],"meta":{"line":57,"file":"SettingsCache.js","path":"src/lib/settings"}},{"name":"validate","description":"The validator function Klasa uses for guild settings.","params":[{"name":"resolver","description":"The resolver instance this SettingGateway uses to parse the data.","type":[[["SettingResolver"]]]},{"name":"guild","description":"The data to validate.","type":[[["Object"]],[["string"]]]}],"returns":[[["any"]]],"meta":{"line":74,"file":"SettingsCache.js","path":"src/lib/settings"}}],"meta":{"line":7,"file":"SettingsCache.js","path":"src/lib/settings"}},{"name":"SQL","description":"The sql building class for sql based providers","construct":{"name":"SQL","description":"Creates an instance of SQL.","params":[{"name":"client","description":"The Klasa Client.","type":[[["KlasaClient"]]]},{"name":"gateway","description":"The SettingGateway instance which initialized this instance.","type":[[["SettingGateway"]]]}]},"props":[{"name":"constants","description":"The constants this instance will use to build the SQL schemas.","readonly":true,"type":[[["Object"]]],"meta":{"line":111,"file":"SQL.js","path":"src/lib/settings"}},{"name":"sanitizer","description":"Sanitize and prepare the strings for SQL input.","readonly":true,"type":[[["function"]]],"meta":{"line":120,"file":"SQL.js","path":"src/lib/settings"}},{"name":"schema","description":"Shortcut for Schema.","readonly":true,"type":[[["Object"]]],"meta":{"line":129,"file":"SQL.js","path":"src/lib/settings"}},{"name":"defaults","description":"Shortcut for Schema<Defaults>","readonly":true,"type":[[["Object"]]],"meta":{"line":138,"file":"SQL.js","path":"src/lib/settings"}},{"name":"provider","description":"The provider this SettingGateway instance uses for the persistent data operations.","readonly":true,"type":[[["Provider"]]],"meta":{"line":147,"file":"SQL.js","path":"src/lib/settings"}}],"methods":[{"name":"buildSingleSQLSchema","description":"Generate an automatic SQL schema for a single row.","params":[{"name":"value","description":"The Schema<Value> object.","type":[[["Object"]]]}],"returns":[[["string"]]],"meta":{"line":42,"file":"SQL.js","path":"src/lib/settings"}},{"name":"buildSQLSchema","description":"Generate an automatic SQL schema for all rows.","params":[{"name":"schema","description":"The Schema Object.","type":[[["any"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":53,"file":"SQL.js","path":"src/lib/settings"}},{"name":"initDeserialize","description":"Init the deserialization keys for SQL providers.","meta":{"line":64,"file":"SQL.js","path":"src/lib/settings"}},{"name":"deserializer","description":"Deserialize stringified objects.","params":[{"name":"data","description":"The Settings object.","type":[[["Object"]]]}],"meta":{"line":75,"file":"SQL.js","path":"src/lib/settings"}},{"name":"updateColumns","description":"Create/Remove columns from a SQL database, by the current Schema.","params":[{"name":"schema","description":"The Schema object.","type":[[["Object"]]]},{"name":"defaults","description":"The Schema<Defaults> object.","type":[[["Object"]]]},{"name":"key","description":"The key which is updated.","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":91,"file":"SQL.js","path":"src/lib/settings"}}],"meta":{"line":14,"file":"SQL.js","path":"src/lib/settings"}},{"name":"Command","description":"Base class for all Klasa Commands. See {@tutorial CreatingCommands} for more information how to use this class\nto build custom commands.","implements":["Piece"],"construct":{"name":"Command","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user command pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the command file","type":[[["Array"]]]},{"name":"options","description":"Optional Command settings","optional":true,"default":"{}","type":[[["CommandOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":42,"file":"Command.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":49,"file":"Command.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the command is enabled or not","type":[[["boolean"]]],"meta":{"line":56,"file":"Command.js","path":"src/lib/structures"}},{"name":"runIn","description":"What channels the command should run in","type":[[["Array","<"],["string",">"]]],"meta":{"line":63,"file":"Command.js","path":"src/lib/structures"}},{"name":"cooldown","description":"The cooldown in seconds this command has","type":[[["number"]]],"meta":{"line":70,"file":"Command.js","path":"src/lib/structures"}},{"name":"aliases","description":"The aliases for this command","type":[[["Array","<"],["string",">"]]],"meta":{"line":77,"file":"Command.js","path":"src/lib/structures"}},{"name":"permLevel","description":"The required permLevel to run this command","type":[[["number"]]],"meta":{"line":84,"file":"Command.js","path":"src/lib/structures"}},{"name":"botPerms","description":"The required bot permissions to run this command","type":[[["Array","<"],["string",">"]]],"meta":{"line":91,"file":"Command.js","path":"src/lib/structures"}},{"name":"requiredSettings","description":"The required guild settings to run this command","type":[[["Array","<"],["string",">"]]],"meta":{"line":98,"file":"Command.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the command","type":[[["string"]]],"meta":{"line":105,"file":"Command.js","path":"src/lib/structures"}},{"name":"description","description":"The description of the command","type":[[["string"]]],"meta":{"line":112,"file":"Command.js","path":"src/lib/structures"}},{"name":"extendedHelp","description":"The extended help for the command","type":[[["string"]]],"meta":{"line":119,"file":"Command.js","path":"src/lib/structures"}},{"name":"usageString","description":"The usage string for the command","type":[[["string"]]],"meta":{"line":126,"file":"Command.js","path":"src/lib/structures"}},{"name":"usageDelim","description":"The usage deliminator for the command input","nullable":true,"type":[[["string"]]],"meta":{"line":133,"file":"Command.js","path":"src/lib/structures"}},{"name":"quotedStringSupport","description":"Whether to use quoted string support for this command or not","type":[[["boolean"]]],"meta":{"line":140,"file":"Command.js","path":"src/lib/structures"}},{"name":"fullCategory","description":"The full category for the command","type":[[["Array","<"],["string",">"]]],"meta":{"line":147,"file":"Command.js","path":"src/lib/structures"}},{"name":"category","description":"The main category for the command","type":[[["string"]]],"meta":{"line":154,"file":"Command.js","path":"src/lib/structures"}},{"name":"subCategory","description":"The sub category for the command","type":[[["string"]]],"meta":{"line":161,"file":"Command.js","path":"src/lib/structures"}},{"name":"usage","description":"The parsed usage for the command","type":[[["ParsedUsage"]]],"meta":{"line":168,"file":"Command.js","path":"src/lib/structures"}},{"name":"cooldowns","description":"Any active cooldowns for the command","access":"private","type":[[["Map"]]],"meta":{"line":176,"file":"Command.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this command is stored","type":[[["Array","<"],["string",">"]]],"meta":{"line":183,"file":"Command.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this command piece is stored","type":[[["string"]]],"meta":{"line":190,"file":"Command.js","path":"src/lib/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual commands","abstract":true,"params":[{"name":"msg","description":"The command message mapped on top of the message used to trigger this command","type":[[["CommandMessage"]]]},{"name":"params","description":"The fully resolved parameters based on your usage / usageDelim","type":[[["Array","<"],["any",">"]]]}],"returns":{"types":[[["external",":"]]],"description":"You should return the response message whenever possible"},"meta":{"line":201,"file":"Command.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual commands","abstract":true,"returns":[[["void"]]],"meta":{"line":211,"file":"Command.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":10,"file":"Command.js","path":"src/lib/structures"}},{"name":"CommandMessage","description":"The internal class that turns command arguments into command parameters","construct":{"name":"CommandMessage","params":[{"name":"msg","description":"The message this command message is for","type":[[["external",":"]]]},{"name":"cmd","description":"The command being run","type":[[["Command"]]]},{"name":"prefix","description":"The prefix the user used to run the command","type":[[["string"]]]},{"name":"prefixLength","description":"The length of the prefix the user used to run the command","type":[[["number"]]]}]},"props":[{"name":"client","description":"The client this CommandMessage was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":14,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"msg","description":"The message this command message is for","type":[[["external",":"]]],"meta":{"line":28,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"cmd","description":"The command being run","type":[[["Command"]]],"meta":{"line":35,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"prefix","description":"The prefix used","type":[[["string"]]],"meta":{"line":42,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"prefixLength","description":"The length of the prefix used","type":[[["number"]]],"meta":{"line":49,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"args","description":"The string arguments derived from the usageDelim of the command","type":[[["Array","<"],["string",">"]]],"meta":{"line":56,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"params","description":"The parameters resolved by this class","type":[[["Array","<"],["any",">"]]],"meta":{"line":63,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"reprompted","description":"If the command reprompted for missing args","type":[[["boolean"]]],"meta":{"line":70,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"_currentUsage","description":"A cache of the current usage while validating","access":"private","type":[[["Object"]]],"meta":{"line":78,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"_repeat","description":"Whether the current usage is a repeating arg","access":"private","type":[[["boolean"]]],"meta":{"line":86,"file":"CommandMessage.js","path":"src/lib/structures"}}],"methods":[{"name":"validateArgs","description":"Validates and resolves args into parameters","access":"private","returns":{"types":[[["Array","<"],["any",">"]]],"description":"The resolved parameters"},"meta":{"line":95,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"multiPossibles","description":"Validates and resolves args into parameters, when multiple types of usage is defined","access":"private","params":[{"name":"possible","description":"The id of the possible usage currently being checked","type":[[["number"]]]},{"name":"validated","description":"Escapes the recursive function if the previous iteration validated the arg into a parameter","type":[[["boolean"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"The resolved parameters"},"meta":{"line":154,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"getArgs","description":"Parses a message into string args","scope":"static","access":"private","params":[{"name":"cmdMsg","description":"this command message","type":[[["CommandMessage"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":188,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"getQuotedStringArgs","description":"Parses a message into string args taking into account quoted strings","scope":"static","access":"private","params":[{"name":"cmdMsg","description":"this command message","type":[[["CommandMessage"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":201,"file":"CommandMessage.js","path":"src/lib/structures"}}],"meta":{"line":4,"file":"CommandMessage.js","path":"src/lib/structures"}},{"name":"CommandStore","description":"Stores all the commands usable in Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"CommandStore","description":"Constructs our CommandStore for use in Klasa","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this CommandStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":22,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"aliases","description":"The different aliases that represent the commands in this store.","type":[[["external",":"]]],"meta":{"line":36,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of commands in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":43,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local commands relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":50,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Command"]]],"meta":{"line":57,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":64,"file":"CommandStore.js","path":"src/lib/structures"}}],"methods":[{"name":"get","description":"Returns a command in the store if it exists by its name or by an alias.","params":[{"name":"name","description":"A command or alias name.","type":[[["string"]]]}],"returns":[[["Command"]]],"meta":{"line":73,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"has","description":"Returns a boolean if the command or alias is found within the store.","params":[{"name":"name","description":"A command or alias name","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":82,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a command in our store.","params":[{"name":"command","description":"The command object we are setting up.","type":[[["Command"]]]}],"returns":[[["Command"]]],"meta":{"line":92,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"delete","description":"Deletes a command from the store.","params":[{"name":"name","description":"A command object or a string representing a command or alias name.","type":[[["Command"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":108,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"clear","description":"Clears the commands and aliases from this store","returns":[[["void"]]],"meta":{"line":121,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"loadAll","description":"Loads all of our commands from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of commands and aliases loaded."},"meta":{"line":131,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"walk","description":"Walks our directory of commands for the user and core directories.","scope":"static","params":[{"name":"store","description":"The command store we're loading into.","type":[[["CommandStore"]]]},{"name":"dir","description":"The directory of commands we're using to load commands from.","type":[[["string"]]]},{"name":"subs","description":"Subfolders for recursion.","type":[[["Array","<"],["string",">"]]]}],"returns":[[["void"]]],"meta":{"line":152,"file":"CommandStore.js","path":"src/lib/structures"}}],"meta":{"line":12,"file":"CommandStore.js","path":"src/lib/structures"}},{"name":"Event","description":"Base class for all Klasa Events. See {@tutorial CreatingEvents} for more information how to use this class\nto build custom events.","implements":["Piece"],"construct":{"name":"Event","params":[{"name":"client","description":"The klasa client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user event pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the event file","type":[[["string"]]]},{"name":"options","description":"The Event options","optional":true,"default":"{}","type":[[["EventOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":30,"file":"Event.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this event piece is stored","type":[[["string"]]],"meta":{"line":37,"file":"Event.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this event is stored","type":[[["string"]]],"meta":{"line":44,"file":"Event.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the event","type":[[["string"]]],"meta":{"line":51,"file":"Event.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":58,"file":"Event.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the event is enabled or not","type":[[["boolean"]]],"meta":{"line":65,"file":"Event.js","path":"src/lib/structures"}}],"methods":[{"name":"_run","description":"A wrapper for the run method, to easily disable/enable events","access":"private","params":[{"name":"param","description":"The event parameters emited","type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":75,"file":"Event.js","path":"src/lib/structures"}},{"name":"run","description":"The run method to be overwritten in actual event handlers","abstract":true,"params":[{"name":"param","description":"The event parameters emited","type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":86,"file":"Event.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual events","abstract":true,"returns":[[["void"]]],"meta":{"line":96,"file":"Event.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Event.js","path":"src/lib/structures"}},{"name":"EventStore","description":"Stores all the events that a part of Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"EventStore","description":"Constructs our EventStore for use in Klasa","params":[{"name":"client","description":"The klasa client initializing this store.","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this EventStore was creaated with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of events in Klasa relative to where its installled.","type":[[["String"]]],"meta":{"line":35,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local events relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Event"]]],"meta":{"line":49,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"EventStore.js","path":"src/lib/structures"}}],"methods":[{"name":"clear","description":"Clears the events from the store and removes the listeners.","returns":[[["void"]]],"meta":{"line":64,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"delete","description":"Deletes an event from the store.","params":[{"name":"name","description":"An event object or a string representing the event name.","type":[[["Event"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":74,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up an event in our store.","params":[{"name":"event","description":"The event object we are setting up.","type":[[["Event"]]]}],"returns":[[["Event"]]],"meta":{"line":88,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"EventStore.js","path":"src/lib/structures"}},{"name":"Extendable","description":"Base class for all Klasa Extendables. See {@tutorial CreatingExtendables} for more information how to use this class\nto build custom extendables.","implements":["Piece"],"construct":{"name":"Extendable","params":[{"name":"client","description":"The klasa client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user extendable pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the extendable file","type":[[["string"]]]},{"name":"appliesTo","description":"The discord classes this extendable applies to","type":[[["Array","<"],["string",">"]]]},{"name":"options","description":"The options for this extendable","type":[[["ExtendableOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":33,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this extendable piece is stored","type":[[["string"]]],"meta":{"line":40,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this extendable is stored","type":[[["string"]]],"meta":{"line":47,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the extendable","type":[[["string"]]],"meta":{"line":54,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":61,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"appliesTo","description":"The discord classes this extendable applies to","type":[[["Array","<"],["string",">"]]],"meta":{"line":68,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the language is enabled or not","type":[[["boolean"]]],"meta":{"line":75,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"target","description":"The target library to apply this extendable to","type":[[["boolean"]]],"meta":{"line":82,"file":"Extendable.js","path":"src/lib/structures"}}],"methods":[{"name":"extend","description":"The extend method to be overwritten in actual extend pieces","abstract":true,"params":[{"name":"params","description":"Any parameters you want","type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":92,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to apply the extend method to the Discord.js Class","returns":[[["void"]]],"meta":{"line":101,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":110,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"params":[{"name":"init","description":"If the piece is being init or not","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":123,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":10,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"ExtendableStore","description":"Stores all of our extendables that extend Discord.js","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"ExtendableStore","description":"Constructs our ExtendableStore for use in Klasa","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this ExtendableStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of extendables in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local extendables relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Extendable"]]],"meta":{"line":49,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"ExtendableStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes an extendable from the store.","params":[{"name":"name","description":"A extendable object or a string representing a command or alias name.","type":[[["Extendable"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":65,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"clear","description":"Clears the extendable from the store and removes the extensions.","returns":[[["void"]]],"meta":{"line":78,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up an extendable in our store.","params":[{"name":"extendable","description":"The extendable object we are setting up.","type":[[["Extendable"]]]}],"returns":[[["Extendable"]]],"meta":{"line":88,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"ExtendableStore.js","path":"src/lib/structures"}},{"name":"Finalizer","description":"Base class for all Klasa Finalizers. See {@tutorial CreatingFinalizers} for more information how to use this class\nto build custom finalizers.","implements":["Piece"],"construct":{"name":"Finalizer","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user finalizer pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the finalizer file","type":[[["string"]]]},{"name":"options","description":"Optional Finalizer settings","optional":true,"default":"{}","type":[[["FinalizerOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":30,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this finalizer piece is stored","type":[[["string"]]],"meta":{"line":37,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this finalizer is stored","type":[[["string"]]],"meta":{"line":44,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the finalizer","type":[[["string"]]],"meta":{"line":51,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":58,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the finalizer is enabled or not","type":[[["boolean"]]],"meta":{"line":65,"file":"Finalizer.js","path":"src/lib/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual finalizers","abstract":true,"params":[{"name":"msg","description":"The command message mapped on top of the message used to trigger this finalizer","type":[[["CommandMessage"]]]},{"name":"mes","description":"The bot's response message, if one is returned","type":[[["external",":"]]]},{"name":"start","description":"The performance now start time including all command overhead","type":[[["number"]]]}],"returns":[[["void"]]],"meta":{"line":77,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual finalizers","abstract":true,"returns":[[["void"]]],"meta":{"line":87,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"FinalizerStore","description":"Stores all finalizers for use in Klasa.","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"FinalizerStore","description":"Constructs our FinalizerStore for use in Klasa","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this FinalizerStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of finalizers in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local finalizers relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Finalizer"]]],"meta":{"line":49,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"FinalizerStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes a finalizer from the store","params":[{"name":"name","description":"The finalizer object or a string representing the structure this store caches","type":[[["Finalizer"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":65,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"run","description":"Runs all of our finalizers after a command is ran successfully.","params":[{"name":"args","description":"An array of arguments passed down from the command","variable":true,"type":[[["Array"]]]}],"returns":[[["void"]]],"meta":{"line":78,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a finalizer in our store.","params":[{"name":"finalizer","description":"The finalizer object we are setting up.","type":[[["Finalizer"]]]}],"returns":[[["Finalizer"]]],"meta":{"line":88,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"FinalizerStore.js","path":"src/lib/structures"}},{"name":"Inhibitor","description":"Base class for all Klasa Inhibitors. See {@tutorial CreatingInhibitors} for more information how to use this class\nto build custom inhibitors.","implements":["Piece"],"construct":{"name":"Inhibitor","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user inhibitor pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the inhibitor file","type":[[["string"]]]},{"name":"options","description":"Optional Inhibitor settings","optional":true,"default":"{}","type":[[["InhibitorOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":31,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this inhibitor piece is stored","type":[[["string"]]],"meta":{"line":38,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this inhibitor is stored","type":[[["string"]]],"meta":{"line":45,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the inhibitor","type":[[["string"]]],"meta":{"line":52,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":59,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the inhibitor is enabled or not","type":[[["boolean"]]],"meta":{"line":66,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"spamProtection","description":"If this inhibitor is meant for spamProtection (disables the inhibitor while generating help)","type":[[["boolean"]]],"meta":{"line":73,"file":"Inhibitor.js","path":"src/lib/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual inhibitors","abstract":true,"params":[{"name":"msg","description":"The message that triggered this inhibitor","type":[[["external",":"]]]},{"name":"cmd","description":"The command to run","type":[[["Command"]]]}],"returns":[[["void"]],[["string"]]],"meta":{"line":84,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual inhibitors","abstract":true,"returns":[[["void"]]],"meta":{"line":94,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"InhibitorStore","description":"Stores all the inhibitors in Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"InhibitorStore","description":"Constructs our InhibitorStore for use in Klasa","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this InhibitorStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of inhibitors in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local inhibitors relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Inhibitor"]]],"meta":{"line":49,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"InhibitorStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes a inhibitor from the store","params":[{"name":"name","description":"The inhibitor object or a string representing the structure this store caches","type":[[["Inhibitor"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":65,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"run","description":"Runs our inhibitors on the command.","params":[{"name":"msg","description":"The message object from Discord.js","type":[[["external",":"]]]},{"name":"cmd","description":"The command being ran.","type":[[["Command"]]]},{"name":"selective","description":"Whether or not we should ignore certain inhibitors to prevent spam.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["void"]]],"meta":{"line":80,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a inhibitor in our store.","params":[{"name":"inhibitor","description":"The inhibitor object we are setting up.","type":[[["Inhibitor"]]]}],"returns":[[["Inhibitor"]]],"meta":{"line":95,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"InhibitorStore.js","path":"src/lib/structures"}},{"name":"Piece","description":"The common interface for all pieces","see":["Command","Event","Extendable","Finalizer","Inhibitor","Language","Monitor","Provider"],"methods":[{"name":"reload","description":"Reloads this piece","returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"toString","description":"Defines toString behavior for pieces","returns":{"types":[[["string"]]],"description":"This piece name"},"meta":{"line":65,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"applyToClass","description":"Applies this interface to a class","scope":"static","params":[{"name":"structure","description":"The structure to apply this interface to","type":[[["Object"]]]},{"name":"skips","description":"The methods to skip when applying this interface","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":75,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":14,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"Store","description":"The common interface for all stores","see":["CommandStore","EventStore","ExtendableStore","FinalizerStore","InhibitorStore","MonitorStore","ProviderStore"],"methods":[{"name":"init","description":"Initializes all pieces in this store.","returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"toString","description":"Defines toString behavior for stores","returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":78,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"applyToClass","description":"Applies this interface to a class","scope":"static","params":[{"name":"structure","description":"The structure to apply this interface to","type":[[["Object"]]]},{"name":"skips","description":"The methods to skip when applying this interface","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":88,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":15,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"Language","description":"Base class for all Klasa Languages. See {@tutorial CreatingLanguages} for more information how to use this class\nto build custom languages.","implements":["Piece"],"construct":{"name":"Language","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user language pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the finalizer file","type":[[["Array"]]]},{"name":"options","description":"Optional Language settings","optional":true,"default":"{}","type":[[["LanguageOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":30,"file":"Language.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this language piece is stored","type":[[["string"]]],"meta":{"line":37,"file":"Language.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this language is stored","type":[[["string"]]],"meta":{"line":44,"file":"Language.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the language","type":[[["string"]]],"meta":{"line":51,"file":"Language.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":58,"file":"Language.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the language is enabled or not","type":[[["boolean"]]],"meta":{"line":65,"file":"Language.js","path":"src/lib/structures"}}],"methods":[{"name":"get","description":"The method to get language strings","params":[{"name":"term","description":"The string or function to look up","type":[[["string"]]]},{"name":"args","description":"Any arguments to pass to the lookup","variable":true,"type":[[["any"]]]}],"returns":[[["string"]],[["function"]]],"meta":{"line":75,"file":"Language.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual languages","abstract":true,"returns":[[["void"]]],"meta":{"line":97,"file":"Language.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Language.js","path":"src/lib/structures"}},{"name":"LanguageStore","description":"Stores all languages for use in Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"LanguageStore","description":"Constructs our LanguageStore for use in Klasa","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this LanguageStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of languages in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local languages relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Language"]]],"meta":{"line":49,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"default","description":"The default language","readonly":true,"type":[[["Language"]]],"meta":{"line":65,"file":"LanguageStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes a language from the store","params":[{"name":"name","description":"The language object or a string representing the structure this store caches","type":[[["Finalizer"]],[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":75,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a language in our store.","params":[{"name":"language","description":"The finalizer object we are setting up.","type":[[["Language"]]]}],"returns":[[["Language"]]],"meta":{"line":88,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"LanguageStore.js","path":"src/lib/structures"}},{"name":"Monitor","description":"Base class for all Klasa Monitors. See {@tutorial CreatingMonitors} for more information how to use this class\nto build custom monitors.","implements":["Piece"],"construct":{"name":"Monitor","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user monitor pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the monitor file","type":[[["string"]]]},{"name":"options","description":"Optional Monitor settings","optional":true,"default":"{}","type":[[["MonitorOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":33,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this monitor piece is stored","type":[[["string"]]],"meta":{"line":40,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this monitor is stored","type":[[["string"]]],"meta":{"line":47,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the monitor","type":[[["string"]]],"meta":{"line":54,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":61,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the monitor is enabled or not","type":[[["boolean"]]],"meta":{"line":68,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"ignoreBots","description":"Whether the monitor ignores bots or not","type":[[["boolean"]]],"meta":{"line":75,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"ignoreSelf","description":"Whether the monitor ignores itself or not","type":[[["boolean"]]],"meta":{"line":82,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"ignoreOthers","description":"Whether the monitor ignores others or not","type":[[["boolean"]]],"meta":{"line":89,"file":"Monitor.js","path":"src/lib/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual monitor pieces","abstract":true,"params":[{"name":"msg","description":"The discord message","type":[[["external",":"]]]}],"returns":[[["void"]]],"meta":{"line":99,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"init","description":"The init method to be optionaly overwritten in actual monitor pieces","abstract":true,"returns":[[["void"]]],"meta":{"line":109,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"MonitorStore","description":"Stores all monitors for use in Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"MonitorStore","description":"Constructs our MonitorStore for use in Klasa","params":[{"name":"client","description":"The Klasa Client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this MonitorStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of monitors in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local monitors relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Inhibitor"]]],"meta":{"line":49,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"MonitorStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes a monitor from the store","params":[{"name":"name","description":"The monitor object or a string representing the structure this store caches","type":[[["Monitor"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":65,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"run","description":"Runs our monitors on the message.","params":[{"name":"msg","description":"The message object from Discord.js","type":[[["external",":"]]]}],"meta":{"line":77,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a monitor in our store.","params":[{"name":"monitor","description":"The monitor object we are setting up.","type":[[["Monitor"]]]}],"returns":[[["Monitor"]]],"meta":{"line":91,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"MonitorStore.js","path":"src/lib/structures"}},{"name":"PermissionLevels","description":"Permission levels. See {@tutorial UnderstandingPermissionLevels} for more information how to use this class\nto define custom permissions.","extends":["external:Collection"],"construct":{"name":"PermissionLevels","description":"Creates a new PermissionLevels","params":[{"name":"levels","description":"How many permission levels there should be","default":11,"type":[[["number"]]]}]},"props":[{"name":"requiredLevels","description":"The amount of permission levels","type":[[["number"]]],"meta":{"line":31,"file":"PermissionLevels.js","path":"src/lib/structures"}}],"methods":[{"name":"addLevel","description":"Adds levels to the levels cache to be converted to valid permission structure","params":[{"name":"level","description":"The permission number for the level you are defining","type":[[["number"]]]},{"name":"brk","description":"Whether the level should break (stop processing higher levels, and inhibit a no permission error)","type":[[["boolean"]]]},{"name":"check","description":"The permission checking function","type":[[["function"]]]}],"returns":{"types":[[["PermissionLevels"]]],"description":"This permission levels"},"meta":{"line":46,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"set","description":"Adds levels to the levels cache to be converted to valid permission structure","access":"private","params":[{"name":"level","description":"The permission number for the level you are defining","type":[[["number"]]]},{"name":"obj","description":"Whether the level should break (stop processing higher levels, and inhibit a no permission error)","type":[[["permissionLevelResponse"]]]}],"returns":{"types":[[["PermissionLevels"]]],"description":"This permission levels"},"meta":{"line":58,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"isValid","description":"Checks if all permission levels are valid","returns":[[["boolean"]]],"meta":{"line":69,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"debug","description":"Returns any errors in the perm levels","returns":{"types":[[["string"]]],"description":"Error message(s)"},"meta":{"line":78,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"run","description":"Runs the defined permLevels","params":[{"name":"msg","description":"The message to pass to perm level functions","type":[[["external",":"]]]},{"name":"min","description":"The minimum permissionLevel ok to pass","type":[[["number"]]]}],"returns":[[["permissionLevelResponse"]]],"meta":{"line":95,"file":"PermissionLevels.js","path":"src/lib/structures"}}],"meta":{"line":9,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"Provider","description":"Base class for all Klasa Providers. See {@tutorial CreatingProviders} for more information how to use this class\nto build custom providers.","implements":["Piece"],"construct":{"name":"Provider","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]},{"name":"dir","description":"The path to the core or user provider pieces folder","type":[[["string"]]]},{"name":"file","description":"The path from the pieces folder to the provider file","type":[[["string"]]]},{"name":"options","description":"Optional Provider settings","optional":true,"default":"{}","type":[[["ProviderOptions"]]]}]},"props":[{"name":"client","type":[[["KlasaClient"]]],"meta":{"line":32,"file":"Provider.js","path":"src/lib/structures"}},{"name":"dir","description":"The directory to where this provider piece is stored","type":[[["string"]]],"meta":{"line":39,"file":"Provider.js","path":"src/lib/structures"}},{"name":"file","description":"The file location where this provider is stored","type":[[["string"]]],"meta":{"line":46,"file":"Provider.js","path":"src/lib/structures"}},{"name":"name","description":"The name of the provider","type":[[["string"]]],"meta":{"line":53,"file":"Provider.js","path":"src/lib/structures"}},{"name":"type","description":"The type of Klasa piece this is","type":[[["string"]]],"meta":{"line":60,"file":"Provider.js","path":"src/lib/structures"}},{"name":"enabled","description":"If the provider is enabled or not","type":[[["boolean"]]],"meta":{"line":67,"file":"Provider.js","path":"src/lib/structures"}},{"name":"description","description":"The description of the provider","type":[[["string"]]],"meta":{"line":74,"file":"Provider.js","path":"src/lib/structures"}},{"name":"sql","description":"If the provider provides to a sql datasource","type":[[["boolean"]]],"meta":{"line":81,"file":"Provider.js","path":"src/lib/structures"}}],"methods":[{"name":"init","description":"The init method to be optionaly overwritten in actual provider pieces","abstract":true,"returns":[[["void"]]],"meta":{"line":90,"file":"Provider.js","path":"src/lib/structures"}},{"name":"shutdown","description":"The shutdown method to be optionaly overwritten in actual provider pieces","abstract":true,"returns":[[["void"]]],"meta":{"line":100,"file":"Provider.js","path":"src/lib/structures"}},{"name":"reload","description":"Reloads this piece","implements":["Piece#reload"],"returns":{"types":[[["Piece"]]],"description":"The newly loaded piece"},"meta":{"line":21,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"unload","description":"Unloads this piece","implements":["Piece#unload"],"returns":[[["void"]]],"meta":{"line":33,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"disable","description":"Disables this piece","implements":["Piece#disable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":43,"file":"Piece.js","path":"src/lib/structures/interfaces"}},{"name":"enable","description":"Enables this piece","implements":["Piece#enable"],"returns":{"types":[[["Piece"]]],"description":"This piece"},"meta":{"line":54,"file":"Piece.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":9,"file":"Provider.js","path":"src/lib/structures"}},{"name":"ProviderStore","description":"Stores all providers for use in Klasa","extends":["external:Collection"],"implements":["Store"],"construct":{"name":"ProviderStore","description":"Constructs our ProviderStore for use in Klasa","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}]},"props":[{"name":"client","description":"The client this ProviderStore was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":21,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"coreDir","description":"The directory of providers in Klasa relative to where its installed.","type":[[["String"]]],"meta":{"line":35,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"userDir","description":"The directory of local providers relative to where you run Klasa from.","type":[[["String"]]],"meta":{"line":42,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"holds","description":"The type of structure this store holds","type":[[["Provider"]]],"meta":{"line":49,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"name","description":"The name of what this holds","type":[[["String"]]],"meta":{"line":56,"file":"ProviderStore.js","path":"src/lib/structures"}}],"methods":[{"name":"delete","description":"Deletes a provider from the store","params":[{"name":"name","description":"The provider object or a string representing the structure this store caches","type":[[["Provider"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":65,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"set","description":"Sets up a provider in our store.","params":[{"name":"provider","description":"The provider object we are setting up.","type":[[["Provider"]]]}],"returns":[[["Provider"]]],"meta":{"line":79,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"init","description":"Initializes all pieces in this store.","implements":["Store#init"],"returns":[[["Array"]]],"meta":{"line":22,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"load","description":"Loads a piece into Klasa so it can be saved in this store.","implements":["Store#load"],"params":[{"name":"dir","description":"The user directory or core directory where this file is saved.","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":33,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"loadAll","description":"Loads all of our pieces from both the user and core directories.","implements":["Store#loadAll"],"returns":{"types":[[["number"]]],"description":"The number of pieces loaded."},"meta":{"line":51,"file":"Store.js","path":"src/lib/structures/interfaces"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","implements":["Store#resolve"],"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":68,"file":"Store.js","path":"src/lib/structures/interfaces"}}],"meta":{"line":11,"file":"ProviderStore.js","path":"src/lib/structures"}},{"name":"ParsedUsage","description":"Converts usage strings into objects to compare against later","construct":{"name":"ParsedUsage","params":[{"name":"client","description":"The klasa client","type":[[["KlasaClient"]]]},{"name":"command","description":"The command this parsed usage is for","type":[[["Command"]]]}]},"props":[{"name":"client","description":"The client this CommandMessage was created with.","readonly":true,"type":[[["KlasaClient"]]],"meta":{"line":14,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"names","description":"All names and aliases for the command","type":[[["Array","<"],["string",">"]]],"meta":{"line":28,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"commands","description":"The compiled string for all names/aliases in a usage string","type":[[["string"]]],"meta":{"line":35,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"deliminatedUsage","description":"The usage string re-deliminated with the usageDelim","type":[[["string"]]],"meta":{"line":42,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"usageString","description":"The usage string","type":[[["string"]]],"meta":{"line":49,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"parsedUsage","description":"The usage object to compare against later","type":[[["Array","<"],["Tag",">"]]],"meta":{"line":56,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"nearlyFullUsage","description":"The concatenated string of this.commands and this.deliminatedUsage","type":[[["string"]]],"meta":{"line":63,"file":"ParsedUsage.js","path":"src/lib/usage"}}],"methods":[{"name":"fullUsage","description":"Creates a full usage string including prefix and commands/aliases for documentation/help purposes","params":[{"name":"msg","description":"a message to check to get the current prefix","type":[[["external",":"]]]}],"returns":[[["string"]]],"meta":{"line":72,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"parseUsage","description":"Method responsible for building the usage object to check against","scope":"static","params":[{"name":"usageString","description":"The usage string to parse","type":[[["string"]]]}],"returns":[[["Array","<"],["Tag",">"]]],"meta":{"line":83,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"tagOpen","description":"Method responsible for handling tag opens","scope":"static","params":[{"name":"usage","description":"The current usage interum object","type":[[["Object"]]]},{"name":"char","description":"The character that triggered this function","type":[[["string"]]]}],"returns":{"types":[[["Object"]]],"description":"The current usage interum object"},"meta":{"line":132,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"tagClose","description":"Method responsible for handling tag closes","scope":"static","params":[{"name":"usage","description":"The current usage interum object","type":[[["Object"]]]},{"name":"char","description":"The character that triggered this function","type":[[["string"]]]}],"returns":{"types":[[["Object"]]],"description":"The current usage interum object"},"meta":{"line":147,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"tagSpace","description":"Method responsible for handling tag spacing","scope":"static","params":[{"name":"usage","description":"The current usage interum object","type":[[["Object"]]]},{"name":"char","description":"The character that triggered this function","type":[[["string"]]]}],"returns":{"types":[[["Object"]]],"description":"The current usage interum object"},"meta":{"line":173,"file":"ParsedUsage.js","path":"src/lib/usage"}}],"meta":{"line":6,"file":"ParsedUsage.js","path":"src/lib/usage"}},{"name":"Possible","description":"Represents a possibility in a usage Tag","construct":{"name":"Possible","params":[{"name":"regexResults","description":"The regex results from parsing the tag member","type":[[["Array","<"],["string",">"]]]}]},"props":[{"name":"name","description":"The name of this possible","type":[[["string"]]],"meta":{"line":19,"file":"Possible.js","path":"src/lib/usage"}},{"name":"type","description":"The type of this possible","type":[[["string"]]],"meta":{"line":26,"file":"Possible.js","path":"src/lib/usage"}},{"name":"min","description":"The min of this possible","nullable":true,"type":[[["number"]]],"meta":{"line":33,"file":"Possible.js","path":"src/lib/usage"}},{"name":"max","description":"The max of this possible","nullable":true,"type":[[["number"]]],"meta":{"line":40,"file":"Possible.js","path":"src/lib/usage"}},{"name":"regex","description":"The regex of this possible","nullable":true,"type":[[["RegExp"]]],"meta":{"line":47,"file":"Possible.js","path":"src/lib/usage"}}],"methods":[{"name":"resolveLimit","description":"Resolves a limit","scope":"static","params":[{"name":"limit","description":"The limit to evaluate","type":[[["string"]]]},{"name":"type","description":"The type of limit","type":[[["string"]]]}],"returns":[[["number"]]],"meta":{"line":59,"file":"Possible.js","path":"src/lib/usage"}}],"meta":{"line":7,"file":"Possible.js","path":"src/lib/usage"}},{"name":"Tag","description":"Represents a usage Tag","construct":{"name":"Tag","params":[{"name":"members","description":"The tag contents to parse","type":[[["string"]]]},{"name":"count","description":"The position of the tag in the usage string","type":[[["number"]]]},{"name":"required","description":"The type of tag (required or optional)","type":[[["boolean"]]]}]},"props":[{"name":"type","description":"The type of this tag","type":[[["string"]]],"meta":{"line":20,"file":"Tag.js","path":"src/lib/usage"}},{"name":"possibles","description":"The possibilities of this tag","type":[[["Array","<"],["Possible",">"]]],"meta":{"line":27,"file":"Tag.js","path":"src/lib/usage"}}],"methods":[{"name":"parseMembers","description":"Parses members into usable possibles","scope":"static","params":[{"name":"members","description":"The tag contents to parse","type":[[["string"]]]},{"name":"count","description":"The position of the tag in the usage string","type":[[["number"]]]}],"returns":[[["Array","<"],["Possible",">"]]],"meta":{"line":37,"file":"Tag.js","path":"src/lib/usage"}},{"name":"parseTrueMembers","description":"Parses raw members true members","scope":"static","params":[{"name":"members","description":"The tag contents to parse","type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":68,"file":"Tag.js","path":"src/lib/usage"}}],"meta":{"line":6,"file":"Tag.js","path":"src/lib/usage"}},{"name":"Colors","description":"Klasa Colors","methods":[{"name":"format","description":"Format a string","params":[{"name":"string","description":"The string to format.","type":[[["string"]]]},{"name":"formatOptions","description":"The format options.","type":[[["ColorsFormatOptions"]]]}],"returns":[[["string"]]],"meta":{"line":159,"file":"Colors.js","path":"src/lib/util"}},{"name":"hexToRGB","description":"Convert hex to RGB","scope":"static","params":[{"name":"hex","description":"The hexadecimal value to parse.","type":[[["string"]]]}],"returns":[[["Array","<"],["number",">"]]],"meta":{"line":90,"file":"Colors.js","path":"src/lib/util"}},{"name":"hueToRGB","description":"Convert hue to RGB","scope":"static","params":[{"name":"p","description":"Value number one.","type":[[["number"]]]},{"name":"q","description":"Value number two.","type":[[["number"]]]},{"name":"t","description":"Value number three.","type":[[["number"]]]}],"returns":[[["number"]]],"meta":{"line":105,"file":"Colors.js","path":"src/lib/util"}},{"name":"hslToRGB","description":"Format HSL to RGB","scope":"static","params":[{"name":"formatArray","description":"The array to format.","type":[[["Array","<"],["number",">"]],[["Array","<"],["string",">"]]]}],"returns":[[["Array","<"],["number",">"]]],"meta":{"line":120,"file":"Colors.js","path":"src/lib/util"}},{"name":"formatArray","description":"Format an array into a string","scope":"static","params":[{"name":"formatArray","description":"The array to format.","type":[[["Array","<"],["number",">"]],[["Array","<"],["string",">"]]]}],"returns":[[["string"]]],"meta":{"line":137,"file":"Colors.js","path":"src/lib/util"}}],"meta":{"line":6,"file":"Colors.js","path":"src/lib/util"}},{"name":"KlasaConsole","description":"Klasa's console class, extends NodeJS Console class.","extends":["Console"],"construct":{"name":"KlasaConsole","description":"Constructs our KlasaConsole instance","params":[{"name":"options","description":"The options for the klasa console.","optional":true,"type":[[["KlasaConsoleConfig"]]]}]},"props":[{"name":"stdout","description":"The standard output stream for this console, defaulted to process.stderr.","type":[[["WritableStream"]]],"meta":{"line":120,"file":"Console.js","path":"src/lib/util"}},{"name":"stderr","description":"The standard error output stream for this console, defaulted to process.stderr.","type":[[["WritableStream"]]],"meta":{"line":128,"file":"Console.js","path":"src/lib/util"}},{"name":"timestamps","description":"Whether or not timestamps should be enabled for this console.","type":[[["boolean"]],[["string"]]],"meta":{"line":141,"file":"Console.js","path":"src/lib/util"}},{"name":"useColors","description":"Whether or not this console should use colors.","type":[[["boolean"]]],"meta":{"line":148,"file":"Console.js","path":"src/lib/util"}},{"name":"colors","description":"The colors for this console.","type":[[["boolean"]],[["Colors"]]],"meta":{"line":150,"file":"Console.js","path":"src/lib/util"}}],"methods":[{"name":"write","description":"Logs everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","type":[["*"]]},{"name":"type","description":"The type of log, particularly useful for coloring.","optional":true,"default":"\"log\"","type":[[["string"]]]}],"meta":{"line":197,"file":"Console.js","path":"src/lib/util"}},{"name":"log","description":"Calls a log write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":212,"file":"Console.js","path":"src/lib/util"}},{"name":"warn","description":"Calls a warn write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":222,"file":"Console.js","path":"src/lib/util"}},{"name":"error","description":"Calls an error write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":232,"file":"Console.js","path":"src/lib/util"}},{"name":"debug","description":"Calls a debug write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":242,"file":"Console.js","path":"src/lib/util"}},{"name":"verbose","description":"Calls a verbose write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":252,"file":"Console.js","path":"src/lib/util"}},{"name":"wtf","description":"Calls a wtf (what a terrible failure) write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print.","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":262,"file":"Console.js","path":"src/lib/util"}},{"name":"timestamp","description":"Logs everything to the console/writable stream.","params":[{"name":"timestamp","description":"The timestamp to maybe format","type":[[["Date"]]]},{"name":"time","description":"The time format used for coloring","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":273,"file":"Console.js","path":"src/lib/util"}},{"name":"messages","description":"Logs everything to the console/writable stream.","params":[{"name":"string","description":"The data we want to print.","type":[[["string"]]]},{"name":"message","description":"The message format used for coloring","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":285,"file":"Console.js","path":"src/lib/util"}},{"name":"flatten","description":"Flattens our data into a readable string.","scope":"static","params":[{"name":"data","description":"Some data to flatten","type":[["*"]]},{"name":"useColors","description":"Whether or not the inspection should color the output","type":[[["boolean"]]]}],"returns":[[["string"]]],"meta":{"line":297,"file":"Console.js","path":"src/lib/util"}}],"meta":{"line":10,"file":"Console.js","path":"src/lib/util"}},{"name":"ReactionHandler","description":"Klasa's ReactionHandler, for handling RichDisplay and RichMenu reaction input","extends":["ReactionCollector"],"construct":{"name":"ReactionHandler","description":"Constructs our ReactionHandler instance","params":[{"name":"msg","description":"A message this ReactionHandler should handle reactions","type":[[["external",":"]]]},{"name":"filter","description":"A filter function to determine which emoji reactions should be handled","type":[[["function"]]]},{"name":"options","description":"The options for this ReactionHandler","type":[[["ReactionHandlerOptions"]]]},{"name":"display","description":"The RichDisplay or RichMenu that this handler is for","type":[[["RichDisplay"]],[["RichMenu"]]]},{"name":"emojis","description":"The emojis which should be used in this handler","type":[[["Array","<"],["emoji",">"]]]}]},"props":[{"name":"display","description":"The RichDisplay/RichMenu this Handler is for","type":[[["RichDisplay"]],[["RichMenu"]]],"meta":{"line":46,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"methodMap","description":"An emoji to method map, to map custom emojis to static method names","type":[[["Map","<"],["string",", "],["emoji",">"]]],"meta":{"line":53,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"currentPage","description":"The current page the display is on","type":[[["number"]]],"meta":{"line":60,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"prompt","description":"The prompt to use when jumping pages","type":[[["string"]]],"meta":{"line":67,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"time","description":"The time until the reaction collector closes automatically","type":[[["number"]]],"meta":{"line":74,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"awaiting","description":"Whether the menu is awaiting a response of a prompt, to block all other jump reactions","type":[[["boolean"]]],"meta":{"line":81,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"selection","description":"The selection of a RichMenu (useless in a RichDisplay scenario)","type":[[["Promise","<?"],["number",">"]]],"meta":{"line":88,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"reject","description":"Causes this.selection to resolve","access":"private","type":[[["function"]]],"meta":{"line":95,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"resolve","description":"Causes this.selection to reject","access":"private","type":[[["function"]]],"meta":{"line":103,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"reactionsDone","description":"Whether reactions have finished queuing (used to handle clearing reactions on early menu selections)","type":[[["boolean"]]],"meta":{"line":111,"file":"ReactionHandler.js","path":"src/lib/util"}}],"methods":[{"name":"first","description":"The action to take when the \"first\" emoji is reacted","returns":[[["void"]]],"meta":{"line":128,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"back","description":"The action to take when the \"back\" emoji is reacted","returns":[[["void"]]],"meta":{"line":138,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"forward","description":"The action to take when the \"forward\" emoji is reacted","returns":[[["void"]]],"meta":{"line":149,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"last","description":"The action to take when the \"last\" emoji is reacted","returns":[[["void"]]],"meta":{"line":160,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"jump","description":"The action to take when the \"jump\" emoji is reacted","params":[{"name":"user","description":"The user to lock the awaitMessages to","type":[[["external",":"]]]}],"returns":[[["void"]]],"meta":{"line":171,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"info","description":"The action to take when the \"info\" emoji is reacted","returns":[[["void"]]],"meta":{"line":192,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"stop","description":"The action to take when the \"stop\" emoji is reacted","returns":[[["void"]]],"meta":{"line":201,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"zero","description":"The action to take when the \"zero\" emoji is reacted","returns":[[["void"]]],"meta":{"line":211,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"one","description":"The action to take when the \"one\" emoji is reacted","returns":[[["void"]]],"meta":{"line":222,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"two","description":"The action to take when the \"two\" emoji is reacted","returns":[[["void"]]],"meta":{"line":233,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"three","description":"The action to take when the \"three\" emoji is reacted","returns":[[["void"]]],"meta":{"line":244,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"four","description":"The action to take when the \"four\" emoji is reacted","returns":[[["void"]]],"meta":{"line":255,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"five","description":"The action to take when the \"five\" emoji is reacted","returns":[[["void"]]],"meta":{"line":266,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"six","description":"The action to take when the \"six\" emoji is reacted","returns":[[["void"]]],"meta":{"line":277,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"seven","description":"The action to take when the \"seven\" emoji is reacted","returns":[[["void"]]],"meta":{"line":288,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"eight","description":"The action to take when the \"eight\" emoji is reacted","returns":[[["void"]]],"meta":{"line":299,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"nine","description":"The action to take when the \"nine\" emoji is reacted","returns":[[["void"]]],"meta":{"line":310,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"update","description":"Updates the display page","returns":[[["void"]]],"meta":{"line":321,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"_queueEmojiReactions","description":"The action to take when the \"first\" emoji is reacted","access":"private","params":[{"name":"emojis","description":"The remaining emojis to react","type":[[["Array","<"],["emoji",">"]]]}],"returns":[[["null"]]],"meta":{"line":332,"file":"ReactionHandler.js","path":"src/lib/util"}}],"meta":{"line":7,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"RichDisplay","description":"Klasa's RichDisplay, for helping paginated embeds with reaction buttons","construct":{"name":"RichDisplay","description":"Constructs our RichDisplay instance","params":[{"name":"embed","description":"A Template embed to apply to all pages","optional":true,"default":"new MessageEmbed()","type":[[["external",":"]]]}]},"props":[{"name":"embedTemplate","description":"The embed template","type":[[["external",":"]]],"meta":{"line":53,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"pages","description":"The stored pages of the display","type":[[["Array","<"],["external",":"],["MessageEmbed",">"]]],"meta":{"line":60,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"infoPage","description":"An optional Info page/embed","nullable":true,"type":[[["external",":"]]],"meta":{"line":67,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"emojis","description":"The default emojis to use for this display","type":[[["RichDisplayEmojisObject"]]],"meta":{"line":74,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"footered","description":"If footers have been applied to all pages","type":[[["boolean"]]],"meta":{"line":89,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"template","description":"A new instance of the template embed","readonly":true,"type":[[["external",":"]]],"meta":{"line":98,"file":"RichDisplay.js","path":"src/lib/util"}}],"methods":[{"name":"setEmojis","description":"Sets emojis to a new set of emojis","params":[{"name":"emojis","description":"An object containing replacement emojis to use instead.","type":[[["RichDisplayEmojisObject"]]]}],"returns":{"types":[[["RichDisplay"]]],"description":"this RichDisplay"},"meta":{"line":108,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"addPage","description":"Adds a page to the RichDisplay","params":[{"name":"embed","description":"A callback with the embed template passed and the embed returned, or an embed.","type":[[["function"]],[["external",":"]]]}],"returns":{"types":[[["RichDisplay"]]],"description":"this RichDisplay"},"meta":{"line":119,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"setInfoPage","description":"Adds an info page to the RichDisplay","params":[{"name":"embed","description":"A callback with the embed template passed and the embed returned, or an embed.","type":[[["function"]],[["external",":"]]]}],"returns":{"types":[[["RichDisplay"]]],"description":"this RichDisplay"},"meta":{"line":130,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"run","description":"Runs the RichDisplay","params":[{"name":"msg","description":"A message to either edit, or use to send a new message for this RichDisplay","type":[[["external",":"]]]},{"name":"options","description":"The options to use while running this RichDisplay","optional":true,"default":"{}","type":[[["RichDisplayRunOptions"]]]}],"returns":[[["ReactionHandler"]]],"meta":{"line":142,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"_footer","description":"Adds page of pages footers to all pages","access":"private","returns":[[["void"]]],"meta":{"line":167,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"_determineEmojis","description":"Determins the emojis to use in this display","access":"private","params":[{"name":"emojis","description":"An array of emojis to use","type":[[["Array","<"],["emoji",">"]]]},{"name":"stop","description":"Whether the stop emoji should be included","type":[[["boolean"]]]},{"name":"jump","description":"Whether the jump emoji should be included","type":[[["boolean"]]]},{"name":"firstLast","description":"Whether the first & last emojis should be included","type":[[["boolean"]]]}],"returns":[[["Array","<"],["emoji",">"]]],"meta":{"line":182,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"_handlePageGeneration","description":"Resolves the callback or MessageEmbed into a MessageEmbed","access":"private","params":[{"name":"cb","description":"The callback or embed","type":[[["function"]],[["external",":"]]]}],"returns":[[["external",":"]]],"meta":{"line":200,"file":"RichDisplay.js","path":"src/lib/util"}}],"meta":{"line":7,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"RichMenu","description":"Klasa's RichMenu, for helping paginated embeds with reaction buttons","extends":["RichDisplay"],"construct":{"name":"RichMenu","description":"Constructs our RichMenu instance","params":[{"name":"embed","description":"A Template embed to apply to all pages","optional":true,"default":"new MessageEmbed()","type":[[["external",":"]]]}]},"props":[{"name":"emojis","description":"The default emojis to use for this menu","type":[[["RichMenuEmojisObject"]]],"meta":{"line":66,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"paginated","description":"If options have been paginated yet","type":[[["boolean"]]],"meta":{"line":90,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"options","description":"The options of this Menu","type":[[["Array","<"],["MenuOption",">"]]],"meta":{"line":97,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"embedTemplate","description":"The embed template","type":[[["external",":"]]],"meta":{"line":53,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"pages","description":"The stored pages of the display","type":[[["Array","<"],["external",":"],["MessageEmbed",">"]]],"meta":{"line":60,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"infoPage","description":"An optional Info page/embed","nullable":true,"type":[[["external",":"]]],"meta":{"line":67,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"footered","description":"If footers have been applied to all pages","type":[[["boolean"]]],"meta":{"line":89,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"template","description":"A new instance of the template embed","readonly":true,"type":[[["external",":"]]],"meta":{"line":98,"file":"RichDisplay.js","path":"src/lib/util"}}],"methods":[{"name":"addPage","meta":{"line":104,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"addOption","description":"Adds a MenuOption","params":[{"name":"name","description":"The name of the option","type":[[["string"]]]},{"name":"body","description":"The description of the option","type":[[["string"]]]},{"name":"inline","description":"Whether the option should be inline","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["RichMenu"]]],"description":"this RichMenu"},"meta":{"line":116,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"run","description":"Runs this RichMenu","params":[{"name":"msg","description":"A message to edit or use to send a new message with","type":[[["external",":"]]]},{"name":"options","description":"The options to use with this RichMenu","type":[[["RichMenuRunOptions"]]]}],"returns":[[["ReactionHandler"]]],"meta":{"line":128,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"_determineEmojis","description":"Determins the emojis to use in this menu","access":"private","params":[{"name":"emojis","description":"An array of emojis to use","type":[[["Array","<"],["emoji",">"]]]},{"name":"stop","description":"Whether the stop emoji should be included","type":[[["boolean"]]]}],"returns":[[["Array","<"],["emoji",">"]]],"meta":{"line":141,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"_paginate","description":"Converts MenuOptions into display pages","access":"private","returns":[[["void"]]],"meta":{"line":153,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"setEmojis","description":"Sets emojis to a new set of emojis","inherits":"RichDisplay#setEmojis","inherited":true,"params":[{"name":"emojis","description":"An object containing replacement emojis to use instead.","type":[[["RichDisplayEmojisObject"]]]}],"returns":{"types":[[["RichDisplay"]]],"description":"this RichDisplay"},"meta":{"line":108,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"setInfoPage","description":"Adds an info page to the RichDisplay","inherits":"RichDisplay#setInfoPage","inherited":true,"params":[{"name":"embed","description":"A callback with the embed template passed and the embed returned, or an embed.","type":[[["function"]],[["external",":"]]]}],"returns":{"types":[[["RichDisplay"]]],"description":"this RichDisplay"},"meta":{"line":130,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"_footer","description":"Adds page of pages footers to all pages","access":"private","inherits":"RichDisplay#_footer","inherited":true,"returns":[[["void"]]],"meta":{"line":167,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"_handlePageGeneration","description":"Resolves the callback or MessageEmbed into a MessageEmbed","access":"private","inherits":"RichDisplay#_handlePageGeneration","inherited":true,"params":[{"name":"cb","description":"The callback or embed","type":[[["function"]],[["external",":"]]]}],"returns":[[["external",":"]]],"meta":{"line":200,"file":"RichDisplay.js","path":"src/lib/util"}}],"meta":{"line":7,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"Stopwatch","description":"Klasa's Stopwatch class, uses native node to replicate/extend previous performance now dependancy.","construct":{"name":"Stopwatch","description":"Starts a new Stopwatch","params":[{"name":"digits","description":"The number of digits to appear after the decimal point when returning the friendly duration","optional":true,"default":2,"type":[[["number"]]]}]},"props":[{"name":"_start","description":"The start time of this stopwatch","access":"private","type":[[["number"]]],"meta":{"line":20,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"_end","description":"The end time of this stopwatch","access":"private","nullable":true,"type":[[["number"]]],"meta":{"line":28,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"digits","description":"The number of digits to appear after the decimal point when returning the friendly duration.","type":[[["number"]]],"meta":{"line":35,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"duration","description":"The duration of this stopwatch since start or start to end if this stopwatch has stopped.","readonly":true,"type":[[["number"]]],"meta":{"line":44,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"friendlyDuration","description":"The duration formatted in a friendly string","readonly":true,"type":[[["string"]]],"meta":{"line":54,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"running","description":"If the stopwatch is running or not","readonly":true,"type":[[["boolean"]]],"meta":{"line":67,"file":"Stopwatch.js","path":"src/lib/util"}}],"methods":[{"name":"restart","description":"Restarts the Stopwatch (Returns a running state)","returns":[[["Stopwatch"]]],"meta":{"line":76,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"reset","description":"Resets the Stopwatch to 0 duration (Returns a stopped state)","returns":[[["Stopwatch"]]],"meta":{"line":87,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"start","description":"Starts the Stopwatch","returns":[[["Stopwatch"]]],"meta":{"line":98,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"stop","description":"Stops the Stopwatch, freezing the duration","returns":[[["Stopwatch"]]],"meta":{"line":111,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"toString","description":"Defines toString behavior o return the friendlyDuration","returns":[[["string"]]],"meta":{"line":121,"file":"Stopwatch.js","path":"src/lib/util"}}],"meta":{"line":6,"file":"Stopwatch.js","path":"src/lib/util"}},{"name":"Util","description":"Contains static methods to be used throughout klasa","construct":{"name":"Util","description":"This class may not be initiated with new"},"methods":[{"name":"codeBlock","description":"Makes a codeblock markup string","scope":"static","params":[{"name":"lang","description":"The codeblock language","type":[[["string"]]]},{"name":"expression","description":"The expression to be wrapped in the codeblock","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":26,"file":"util.js","path":"src/lib/util"}},{"name":"clean","description":"Cleans sensitive info from strings","scope":"static","params":[{"name":"text","description":"The text to clean","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":36,"file":"util.js","path":"src/lib/util"}},{"name":"initClean","description":"Initializes the sensitive patterns for clean()","scope":"static","access":"private","params":[{"name":"client","description":"The Klasa client","type":[[["KlasaClient"]]]}],"meta":{"line":47,"file":"util.js","path":"src/lib/util"}},{"name":"toTitleCase","description":"Converts a string to Title Case","scope":"static","params":[{"name":"str","description":"The string to titlecaseify","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":61,"file":"util.js","path":"src/lib/util"}},{"name":"newError","description":"Generates an error object used for argument reprompting","scope":"static","params":[{"name":"error","description":"An error object","type":[[["Error"]]]},{"name":"code","description":"The status code to assign to the error","type":[[["number"]]]}],"returns":[[["Error"]]],"meta":{"line":72,"file":"util.js","path":"src/lib/util"}},{"name":"regExpEsc","description":"Cleans a string from regex injection","scope":"static","params":[{"name":"str","description":"The string to clean","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":92,"file":"util.js","path":"src/lib/util"}},{"name":"applyToClass","description":"Applies an interface to a class|","scope":"static","params":[{"name":"base","description":"The interface to apply to a structure","type":[[["Object"]]]},{"name":"structure","description":"The structure to apply the interface to","type":[[["Object"]]]},{"name":"skips","description":"The methods to skip when applying this interface","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":103,"file":"util.js","path":"src/lib/util"}},{"name":"exec","description":"Promisified version of child_process.exec for use with await","scope":"static","params":[{"name":"command","description":"The command to run","type":[[["string"]]]},{"name":"options","description":"The options to pass to exec","type":[[["execOptions"]]]}],"returns":[[["string"]]],"meta":{"line":133,"file":"util.js","path":"src/lib/util"}},{"name":"sleep","description":"Promisified version of setTimeout for use with await","scope":"static","params":[{"name":"delay","description":"The amount of time in ms to delay","type":[[["number"]]]},{"name":"args","description":"Any args to pass to the .then (mostly pointless in this form)","type":[[["any"]]]}],"returns":{"types":[[["Promise","<"],["any",">"]]],"description":"The args value passed in"},"meta":{"line":143,"file":"util.js","path":"src/lib/util"}}],"meta":{"line":9,"file":"util.js","path":"src/lib/util"}}],"interfaces":[],"typedefs":[{"name":"KlasaClientConfig","type":[[["Object"]]],"props":[{"name":"prefix","description":"The default prefix the bot should respond to","type":[[["string"]]]},{"name":"clientOptions","description":"The options to pass to D.JS","optional":true,"default":"{}","type":[[["DiscordJSConfig"]]]},{"name":"permissionLevels","description":"The permission levels to use with this bot","optional":true,"default":"KlasaClient.defaultPermissionLevels","type":[[["PermissionLevels"]]]},{"name":"clientBaseDir","description":"The directory where all piece folders can be found","optional":true,"default":"path.dirname(require.main.filename)","type":[[["string"]]]},{"name":"commandMessageLifetime","description":"The threshold for how old command messages can be before sweeping since the last edit in seconds","optional":true,"default":1800,"type":[[["number"]]]},{"name":"commandMessageSweep","description":"The interval duration for which command messages should be sweept in seconds","optional":true,"default":900,"type":[[["number"]]]},{"name":"provider","description":"The provider to use in Klasa","optional":true,"type":[[["object"]]]},{"name":"console","description":"Config options to pass to the client console","optional":true,"default":"{}","type":[[["KlasaConsoleConfig"]]]},{"name":"consoleEvents","description":"Config options to pass to the client console","optional":true,"default":"{}","type":[[["KlasaConsoleEvents"]]]},{"name":"language","description":"The default language Klasa should opt-in for the commands","optional":true,"default":"'en-US'","type":[[["string"]]]},{"name":"promptTime","description":"The amount of time in milliseconds prompts should last","optional":true,"default":30000,"type":[[["number"]]]},{"name":"ignoreBots","description":"Whether or not this bot should ignore other bots","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreSelf","description":"Whether or not this bot should ignore itself","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"cmdPrompt","description":"Whether the bot should prompt missing parameters","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"cmdEditing","description":"Whether the bot should update responses if the command is edited","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"cmdLogging","description":"Whether the bot should log command usage","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"typing","description":"Whether the bot should type while processing commands.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"quotedStringSupport","description":"Whether the bot should default to using quoted string support in arg parsing, or not (overridable per command)","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"readyMessage","description":"readyMessage to be passed thru Klasa's ready event","optional":true,"default":"`Successfully initialized. Ready to serve ${this.guilds.size} guilds.`","nullable":true,"type":[[["string"]],[["function"]]]},{"name":"ownerID","description":"The discord user id for the user the bot should respect as the owner (gotten from Discord api if not provided)","optional":true,"type":[[["string"]]]}],"meta":{"line":26,"file":"Client.js","path":"src/lib"}},{"name":"KlasaConsoleConfig","type":[[["Object"]]],"props":[{"name":"stdout","description":"Output stream","optional":true,"default":"process.stdout","type":[[["WriteableStream"]]]},{"name":"stderr","description":"Error stream","optional":true,"default":"process.stderr","type":[[["WriteableStream"]]]},{"name":"useColor","description":"Whether the client console should use colors","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"colors","description":"Color formats to use","optional":true,"type":[[["Colors"]]]},{"name":"timestamps","description":"Whether to use timestamps or not, or the moment format of the timestamp you want to use","optional":true,"default":true,"type":[[["boolean"]],[["string"]]]}],"meta":{"line":51,"file":"Client.js","path":"src/lib"}},{"name":"KlasaConsoleEvents","type":[[["Object"]]],"props":[{"name":"log","description":"If the log event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"warn","description":"If the warn event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"error","description":"If the error event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"debug","description":"If the debug event should be enabled by default","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"verbose","description":"If the verbose event should be enabled by default","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"wtf","description":"If the wtf event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":61,"file":"Client.js","path":"src/lib"}},{"name":"AddOptions","type":[[["Object"]]],"props":[{"name":"type","description":"The type for the key.","type":[[["string"]]]},{"name":"default","description":"The default value for the key.","type":[[["any"]]]},{"name":"min","description":"The min value for the key (String.length for String, value for number).","type":[[["number"]]]},{"name":"max","description":"The max value for the key (String.length for String, value for number).","type":[[["number"]]]},{"name":"array","description":"Whether the key should be stored as Array or not.","type":[[["boolean"]]]}],"meta":{"line":65,"file":"SchemaManager.js","path":"src/lib/settings"}},{"name":"CommandOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the command","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the command is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"runIn","description":"What channel types the command should run in","optional":true,"default":"['text','dm','group']","type":[[["Array","<"],["string",">"]]]},{"name":"cooldown","description":"The amount of time before the user can run the command again in seconds","optional":true,"default":0,"type":[[["number"]]]},{"name":"aliases","description":"Any comand aliases","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]},{"name":"permLevel","description":"The required permission level to use the command","optional":true,"default":0,"type":[[["number"]]]},{"name":"botPerms","description":"The required Discord permissions for the bot to use this command","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]},{"name":"requiredSettings","description":"The required guild settings to use this command","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]},{"name":"description","description":"The help description for the command","optional":true,"default":"''","type":[[["string"]]]},{"name":"usage","description":"The usage string for the command","optional":true,"default":"''","type":[[["string"]]]},{"name":"usageDelim","description":"The string to deliminate the command input for usage","optional":true,"nullable":true,"type":[[["string"]]]},{"name":"quotedStringSupport","description":"Wheter args for this command should not deliminated inside quotes","optional":true,"default":"this.client.config.quotedStringSupport","type":[[["boolean"]]]},{"name":"extendedHelp","description":"Extended help strings","optional":true,"default":"'No extended help available.'","type":[[["string"]]]}],"meta":{"line":12,"file":"Command.js","path":"src/lib/structures"}},{"name":"EventOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the event","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the event is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Event.js","path":"src/lib/structures"}},{"name":"ExtendableOptions","type":[[["object"]]],"props":[{"name":"name","description":"The name of the extendable","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"If the extendable is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"klasa","description":"If the extendable is for Klasa instead of Discord.js","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":12,"file":"Extendable.js","path":"src/lib/structures"}},{"name":"FinalizerOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the finalizer","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the finalizer is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Finalizer.js","path":"src/lib/structures"}},{"name":"InhibitorOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the inhibitor","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the inhibitor is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"spamProtection","description":"If this inhibitor is meant for spamProtection (disables the inhibitor while generating help)","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Inhibitor.js","path":"src/lib/structures"}},{"name":"LanguageOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the language","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the language is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Language.js","path":"src/lib/structures"}},{"name":"MonitorOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the monitor","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the monitor is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreBots","description":"Whether the monitor ignores bots or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreSelf","description":"Whether the monitor ignores itself or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreOthers","description":"Whether the monitor ignores others or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Monitor.js","path":"src/lib/structures"}},{"name":"permissionLevelResponse","type":[[["Object"]]],"props":[{"name":"broke","description":"Whether the loop broke execution of higher levels","type":[[["boolean"]]]},{"name":"permission","description":"Whether the permission level check passed or not","type":[[["boolean"]]]}],"meta":{"line":11,"file":"PermissionLevels.js","path":"src/lib/structures"}},{"name":"ProviderOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the provider","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the provider is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"description","description":"The provider description","optional":true,"default":"''","type":[[["string"]]]},{"name":"sql","description":"If the provider provides to a sql datasource","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Provider.js","path":"src/lib/structures"}},{"name":"ColorsFormatOptions","type":[[["object"]]],"props":[{"name":"style","type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"background","type":[[["number"]],[["string"]],[["Array","<"],["number",">"]],[["Array","<"],["string",">"]]]},{"name":"text","type":[[["number"]],[["string"]],[["Array","<"],["number",">"]],[["Array","<"],["string",">"]]]}],"meta":{"line":8,"file":"Colors.js","path":"src/lib/util"}},{"name":"Colors","description":"Time is for the timestamp of the log, message is for the actual output.","type":[[["object"]]],"props":[{"name":"debug","description":"An object containing a message and time color object.","type":[[["KlasaConsoleColorObjects"]]]},{"name":"error","description":"An object containing a message and time color object.","type":[[["KlasaConsoleColorObjects"]]]},{"name":"log","description":"An object containing a message and time color object.","type":[[["KlasaConsoleColorObjects"]]]},{"name":"verbose","description":"An object containing a message and time color object.","type":[[["KlasaConsoleColorObjects"]]]},{"name":"warn","description":"An object containing a message and time color object.","type":[[["KlasaConsoleColorObjects"]]]},{"name":"wtf","description":"An object containing a message and time Color Object.","type":[[["KlasaConsoleColorObjects"]]]}],"meta":{"line":12,"file":"Console.js","path":"src/lib/util"}},{"name":"KlasaConsoleColorObjects","type":[[["object"]]],"props":[{"name":"type","description":"The method from Console this color object should call.","optional":true,"default":"'log'","type":[[["string"]]]},{"name":"message","description":"A message object containing colors and styles.","type":[[["KlasaConsoleMessageObject"]]]},{"name":"time","description":"A time object containing colors and styles.","type":[[["KlasaConsoleTimeObject"]]]}],"meta":{"line":23,"file":"Console.js","path":"src/lib/util"}},{"name":"KlasaConsoleMessageObject","type":[[["object"]]],"props":[{"name":"background","description":"The background color. Can be a basic string like \"red\", a hex string, or a RGB array.","type":[[["BackgroundColorTypes"]]]},{"name":"text","description":"The text color. Can be a basic string like \"red\", a hex string, or a RGB array.","type":[[["TextColorTypes"]]]},{"name":"style","description":"A style string from StyleTypes.","type":[[["StyleTypes"]]]}],"meta":{"line":31,"file":"Console.js","path":"src/lib/util"}},{"name":"KlasaConsoleTimeObject","type":[[["object"]]],"props":[{"name":"background","description":"The background color. Can be a basic string like \"red\", a hex string, or a RGB array.","type":[[["BackgroundColorTypes"]]]},{"name":"text","description":"The text color. Can be a basic string like \"red\", a hex string, a RGB array, or HSL array.","type":[[["TextColorTypes"]]]},{"name":"style","description":"A style string from StyleTypes.","type":[[["StyleTypes"]]]}],"meta":{"line":39,"file":"Console.js","path":"src/lib/util"}},{"name":"TextColorTypes","description":"All the valid color types.","type":[["*"]],"props":[{"name":"black","type":[[["string"]]]},{"name":"red","type":[[["string"]]]},{"name":"green","type":[[["string"]]]},{"name":"yellow","type":[[["string"]]]},{"name":"blue","type":[[["string"]]]},{"name":"magenta","type":[[["string"]]]},{"name":"cyan","type":[[["string"]]]},{"name":"gray","type":[[["string"]]]},{"name":"grey","type":[[["string"]]]},{"name":"lightgray","type":[[["string"]]]},{"name":"lightgrey","type":[[["string"]]]},{"name":"lightred","type":[[["string"]]]},{"name":"lightgreen","type":[[["string"]]]},{"name":"lightyellow","type":[[["string"]]]},{"name":"lightblue","type":[[["string"]]]},{"name":"lightmagenta","type":[[["string"]]]},{"name":"lightcyan","type":[[["string"]]]},{"name":"white","type":[[["string"]]]},{"name":"#008000","description":"green","type":[[["string"]]]},{"name":"#008000","description":"green","type":[[["string"]]]},{"name":"255,0,0","description":"red","optional":true,"type":[[["Array"]]]},{"name":"229,50%,50%","description":"blue","optional":true,"type":[[["Array"]]]}],"meta":{"line":47,"file":"Console.js","path":"src/lib/util"}},{"name":"BackgroundColorTypes","description":"One of these strings, HexStrings, RGB, or HSL are valid types.","type":[["*"]],"props":[{"name":"black","type":[[["string"]]]},{"name":"red","type":[[["string"]]]},{"name":"green","type":[[["string"]]]},{"name":"blue","type":[[["string"]]]},{"name":"magenta","type":[[["string"]]]},{"name":"cyan","type":[[["string"]]]},{"name":"gray","type":[[["string"]]]},{"name":"grey","type":[[["string"]]]},{"name":"lightgray","type":[[["string"]]]},{"name":"lightgrey","type":[[["string"]]]},{"name":"lightred","type":[[["string"]]]},{"name":"lightgreen","type":[[["string"]]]},{"name":"lightyellow","type":[[["string"]]]},{"name":"lightblue","type":[[["string"]]]},{"name":"lightmagenta","type":[[["string"]]]},{"name":"lightcyan","type":[[["string"]]]},{"name":"white","type":[[["string"]]]},{"name":"#008000","description":"green","type":[[["string"]]]},{"name":"255,0,0","description":"red","optional":true,"type":[[["Array"]]]},{"name":"229,50%,50%","description":"blue","optional":true,"type":[[["Array"]]]}],"meta":{"line":74,"file":"Console.js","path":"src/lib/util"}},{"name":"StyleTypes","type":[["*"]],"props":[{"name":"normal","type":[[["string"]]]},{"name":"bold","type":[[["string"]]]},{"name":"dim","type":[[["string"]]]},{"name":"italic","type":[[["string"]]]},{"name":"underline","type":[[["string"]]]},{"name":"inverse","type":[[["string"]]]},{"name":"hidden","type":[[["string"]]]},{"name":"strikethrough","type":[[["string"]]]}],"meta":{"line":99,"file":"Console.js","path":"src/lib/util"}},{"name":"emoji","description":"A single unicode character","type":[[["string"]]],"meta":{"line":9,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"ReactionHandlerOptions","type":[[["object"]]],"props":[{"name":"filter","description":"A filter function to add to the ReactionHandler","optional":true,"type":[[["function"]]]},{"name":"stop","description":"If a stop reaction should be included","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"prompt","description":"The prompt to be used when awaiting user input on a page to jump to","optional":true,"default":"'Which page would you like to jump to?'","type":[[["string"]]]},{"name":"startPage","description":"The page to start the RichMenu on","optional":true,"default":0,"type":[[["number"]]]},{"name":"max","description":"The maximum total amount of reactions to collect","optional":true,"type":[[["number"]]]},{"name":"maxEmojis","description":"The maximum number of emojis to collect","optional":true,"type":[[["number"]]]},{"name":"maxUsers","description":"The maximum number of users to react","optional":true,"type":[[["number"]]]},{"name":"time","description":"The maximum amount of time before this RichMenu should expire","optional":true,"type":[[["number"]]]}],"meta":{"line":16,"file":"ReactionHandler.js","path":"src/lib/util"}},{"name":"RichDisplayEmojisObject","type":[[["object"]]],"props":[{"name":"first","type":[[["emoji"]]]},{"name":"back","type":[[["emoji"]]]},{"name":"forward","type":[[["emoji"]]]},{"name":"last","type":[[["emoji"]]]},{"name":"jump","type":[[["emoji"]]]},{"name":"info","type":[[["emoji"]]]},{"name":"stop","type":[[["emoji"]]]}],"meta":{"line":15,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"RichDisplayRunOptions","type":[[["object"]]],"props":[{"name":"filter","description":"A filter function to add to the ReactionHandler (Recieves: Reaction, User)","optional":true,"type":[[["function"]]]},{"name":"stop","description":"If a stop reaction should be included","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"jump","description":"If a jump reaction should be included","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"firstLast","description":"If a first and last reaction should be included","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"prompt","description":"The prompt to be used when awaiting user input on a page to jump to","optional":true,"default":"'Which page would you like to jump to?'","type":[[["string"]]]},{"name":"startPage","description":"The page to start the RichDisplay on","optional":true,"default":0,"type":[[["number"]]]},{"name":"max","description":"The maximum total amount of reactions to collect","optional":true,"type":[[["number"]]]},{"name":"maxEmojis","description":"The maximum number of emojis to collect","optional":true,"type":[[["number"]]]},{"name":"maxUsers","description":"The maximum number of users to react","optional":true,"type":[[["number"]]]},{"name":"time","description":"The maximum amount of time before this RichDisplay should expire","optional":true,"type":[[["number"]]]}],"meta":{"line":27,"file":"RichDisplay.js","path":"src/lib/util"}},{"name":"RichMenuEmojisObject","type":[[["object"]]],"props":[{"name":"first","type":[[["emoji"]]]},{"name":"back","type":[[["emoji"]]]},{"name":"forward","type":[[["emoji"]]]},{"name":"last","type":[[["emoji"]]]},{"name":"jump","type":[[["emoji"]]]},{"name":"info","type":[[["emoji"]]]},{"name":"stop","type":[[["emoji"]]]},{"name":"zero","type":[[["emoji"]]]},{"name":"one","type":[[["emoji"]]]},{"name":"two","type":[[["emoji"]]]},{"name":"three","type":[[["emoji"]]]},{"name":"four","type":[[["emoji"]]]},{"name":"five","type":[[["emoji"]]]},{"name":"six","type":[[["emoji"]]]},{"name":"seven","type":[[["emoji"]]]},{"name":"eight","type":[[["emoji"]]]},{"name":"nine","type":[[["emoji"]]]}],"meta":{"line":15,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"MenuOption","type":[[["object"]]],"props":[{"name":"name","description":"The name of the option","type":[[["string"]]]},{"name":"body","description":"The description of the option","type":[[["string"]]]},{"name":"inline","description":"Whether the option should be inline","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":37,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"RichMenuRunOptions","type":[[["object"]]],"props":[{"name":"filter","description":"A filter function to add to the ReactionHandler (Recieves: Reaction, User)","optional":true,"type":[[["function"]]]},{"name":"stop","description":"If a stop reaction should be included","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"prompt","description":"The prompt to be used when awaiting user input on a page to jump to","optional":true,"default":"'Which page would you like to jump to?'","type":[[["string"]]]},{"name":"startPage","description":"The page to start the RichMenu on","optional":true,"default":0,"type":[[["number"]]]},{"name":"max","description":"The maximum total amount of reactions to collect","optional":true,"type":[[["number"]]]},{"name":"maxEmojis","description":"The maximum number of emojis to collect","optional":true,"type":[[["number"]]]},{"name":"maxUsers","description":"The maximum number of users to react","optional":true,"type":[[["number"]]]},{"name":"time","description":"The maximum amount of time before this RichMenu should expire","optional":true,"type":[[["number"]]]}],"meta":{"line":45,"file":"RichMenu.js","path":"src/lib/util"}},{"name":"execOptions","type":[[["Object"]]],"props":[{"name":"cwd","description":"Current working directory of the child process","optional":true,"default":"process.cwd()","type":[[["string"]]]},{"name":"env","description":"Environment key-value pairs","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"encoding","description":"encoding to use","optional":true,"default":"'utf8'","type":[[["string"]]]},{"name":"shell","description":"Shell to execute the command with","optional":true,"default":"os === unix ? '/bin/sh' : process.env.ComSpec","type":[[["string"]]]},{"name":"timeout","optional":true,"default":0,"type":[[["number"]]]},{"name":"maxBuffer","description":"Largest amount of data in bytes allowed on stdout or stderr. If exceeded, the child process is terminated.","optional":true,"default":"200*1024","type":[[["number"]]]},{"name":"killSignal","description":"<string> | <integer> (Default: 'SIGTERM')","optional":true,"default":"'SIGTERM'","type":[[["string"]],[["number"]]]},{"name":"uid","description":"Sets the user identity of the process.","optional":true,"type":[[["number"]]]},{"name":"gid","description":"Sets the group identity of the process.","optional":true,"type":[[["number"]]]}],"meta":{"line":111,"file":"util.js","path":"src/lib/util"}}],"externals":[{"name":"Channel","see":["{@link https://discord.js.org/#/docs/main/master/class/Channel}"],"meta":{"line":43,"file":"index.js","path":"src"}},{"name":"Client","see":["{@link https://discord.js.org/#/docs/main/master/class/Client}"],"meta":{"line":47,"file":"index.js","path":"src"}},{"name":"DiscordJSConfig","see":["{@link https://discord.js.org/#/docs/main/master/typedef/ClientOptions}"],"meta":{"line":51,"file":"index.js","path":"src"}},{"name":"ClientApplication","see":["{@link https://discord.js.org/#/docs/main/master/class/ClientApplication}"],"meta":{"line":55,"file":"index.js","path":"src"}},{"name":"Collection","see":["{@link https://discord.js.org/#/docs/main/master/class/Collection}"],"meta":{"line":59,"file":"index.js","path":"src"}},{"name":"DMChannel","see":["{@link https://discord.js.org/#/docs/main/master/class/DMChannel}"],"meta":{"line":63,"file":"index.js","path":"src"}},{"name":"GroupDMChannel","see":["{@link https://discord.js.org/#/docs/main/master/class/GroupDMChannel}"],"meta":{"line":67,"file":"index.js","path":"src"}},{"name":"Guild","see":["{@link https://discord.js.org/#/docs/main/master/class/Guild}"],"meta":{"line":71,"file":"index.js","path":"src"}},{"name":"GuildMember","see":["{@link https://discord.js.org/#/docs/main/master/class/GuildMember}"],"meta":{"line":75,"file":"index.js","path":"src"}},{"name":"GuildResolvable","see":["{@link https://discord.js.org/#/docs/main/master/typedef/GuildResolvable}"],"meta":{"line":79,"file":"index.js","path":"src"}},{"name":"Message","see":["{@link https://discord.js.org/#/docs/main/master/class/Message}"],"meta":{"line":83,"file":"index.js","path":"src"}},{"name":"MessageAttachment","see":["{@link https://discord.js.org/#/docs/main/master/class/MessageAttachment}"],"meta":{"line":87,"file":"index.js","path":"src"}},{"name":"MessageEmbed","see":["{@link https://discord.js.org/#/docs/main/master/class/MessageEmbed}"],"meta":{"line":135,"file":"index.js","path":"src"}},{"name":"MessageReaction","see":["{@link https://discord.js.org/#/docs/main/master/class/MessageReaction}"],"meta":{"line":95,"file":"index.js","path":"src"}},{"name":"MessageOptions","see":["{@link https://discord.js.org/#/docs/main/master/typedef/MessageOptions}"],"meta":{"line":99,"file":"index.js","path":"src"}},{"name":"Role","see":["{@link https://discord.js.org/#/docs/main/master/class/Role}"],"meta":{"line":103,"file":"index.js","path":"src"}},{"name":"StringResolvable","see":["{@link https://discord.js.org/#/docs/main/master/typedef/StringResolvable}"],"meta":{"line":107,"file":"index.js","path":"src"}},{"name":"TextChannel","see":["{@link https://discord.js.org/#/docs/main/master/class/TextChannel}"],"meta":{"line":111,"file":"index.js","path":"src"}},{"name":"User","see":["{@link https://discord.js.org/#/docs/main/master/class/User}"],"meta":{"line":115,"file":"index.js","path":"src"}},{"name":"UserResolvable","see":["{@link https://discord.js.org/#/docs/main/master/class/UserResolvable}"],"meta":{"line":119,"file":"index.js","path":"src"}},{"name":"Emoji","see":["{@link https://discord.js.org/#/docs/main/master/class/Emoji}"],"meta":{"line":123,"file":"index.js","path":"src"}},{"name":"ReactionEmoji","see":["{@link https://discord.js.org/#/docs/main/master/class/ReactionEmoji}"],"meta":{"line":127,"file":"index.js","path":"src"}},{"name":"Webhook","see":["{@link https://discord.js.org/#/docs/main/master/class/Webhook}"],"meta":{"line":131,"file":"index.js","path":"src"}},{"name":"ShardingManager","see":["{@link https://discord.js.org/#/docs/main/master/class/ShardingManager}"],"meta":{"line":139,"file":"index.js","path":"src"}}]}
